using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using SW.SW_Common;
using System.Data;
using System.Data.SqlClient;
using System.Web.UI.HtmlControls;

public partial class ProformaInvoice : System.Web.UI.Page
{
    Invoice_BAL_Temp BALInvoice = new Invoice_BAL_Temp();
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["SessionBO"] == null)
        {
            Response.Redirect("Login.aspx");
        }

        if (!IsPostBack)
        {
            BAL_PagePermissions PP = new BAL_PagePermissions();
            DataTable dtRole = new DataTable();
            SCGL_Session AdSes = (Session["SessionBO"]) as SCGL_Session;
            dtRole = PP.GetPermissionByUserId(SCGL_Common.Convert_ToInt(AdSes.RoleId));
            string pageName = null;
            bool view = false;
            foreach (DataRow dr in dtRole.Rows)
            {
                int row = dtRole.Rows.IndexOf(dr);
                if (dtRole.Rows[row]["Page_Url"].ToString() == "ProformaInvoice.aspx")
                {
                    pageName = dtRole.Rows[row]["Page_Url"].ToString();
                    view = Convert.ToBoolean(dtRole.Rows[row]["Can_View"].ToString());
                    break;
                }
            }
            if (dtRole.Rows.Count > 0)
            {
                if (pageName == "ProformaInvoice.aspx" && view == true)
                {
                    GetMaxInvoiceId();
                    Bind_Customer();
                    if (Request.QueryString["Id"] != null)
                    {
                        BindControl(Convert.ToInt32(Request.QueryString["Id"]));
                        Gv_GetRows1();
                        Gv_GetRows2();
                        Gv_GetRows3();
                        Gv_GetRows4();
                        Gv_GetRows5();
                        Gv_GetRows6();
                        Gv_GetRows7();
                        Gv_GetRows8();
                        Gv_GetRows9();
                        Gv_GetRows10();
                        Gv_GetRows11();
                        Gv_GetRows12();
                        Gv_GetRows13();
                        Gv_GetRows14();
                        Gv_GetRows15();

                        SetInitialRow_For_Edit();
                        FillGridInvoiceDetail();
                        FillGridInvoiceDetail1();
                        FillGridInvoiceDetail3();
                        FillGridInvoiceDetail4();
                        FillGridInvoiceDetail5();
                        FillGridInvoiceDetail6();
                        FillGridInvoiceDetail7();
                        FillGridInvoiceDetail8();
                        FillGridInvoiceDetail9();
                        FillGridInvoiceDetail10();
                        FillGridInvoiceDetail11();
                        FillGridInvoiceDetail12();
                        FillGridInvoiceDetail13();
                        FillGridInvoiceDetail14();
                        FillGridInvoiceDetail15();
                    }

                    else
                    {
                        SetInitialRow();
                    }
                }
                else
                {
                    Response.Redirect("Default.aspx", false);
                }
            }
            
        }
        Reload_JS();
        SCGL_Session SBO = (SCGL_Session)Session["SessionBO"];
        DataTable dt = PM.getFinancialYearByID(SBO.FinYearID);
        hdnMinDate.Value = SCGL_Common.CheckDateTime(dt.Rows[0]["yearFrom"]).ToShortDateString();
        hdnMaxDate.Value = SCGL_Common.CheckDateTime(dt.Rows[0]["YearTo"]).ToShortDateString();

    }

    public void BindControl(int Id)
    {
        if (Request.QueryString["view"] != null)
        {
            btnSave.Visible = false;
            btnaddnewRow.Visible = btnClear.Visible = false;
            btnaddlines2.Visible = btnClear2.Visible = false;
            btnaddlines3.Visible = btnClear3.Visible = false;
            btnaddlines4.Visible = btnClear4.Visible = false;
            btnaddlines5.Visible = btnClear5.Visible = false;
            btnaddlines6.Visible = btnClear6.Visible = false;
            btnaddlines7.Visible = btnClear7.Visible = false;
            btnaddlines8.Visible = btnClear8.Visible = false;
            btnaddlines9.Visible = btnClear9.Visible = false;
            btnaddlines10.Visible = btnClear10.Visible = false;
            btnaddlines11.Visible = btnClear11.Visible = false;
            btnaddlines12.Visible = btnClear12.Visible = false;
            btnaddlines13.Visible = btnClear13.Visible = false;
            btnaddlines14.Visible = btnClear14.Visible = false;
            btnaddlines15.Visible = btnClear15.Visible = false;
        }
        Invoice_BAL_Temp invoiceBal = new Invoice_BAL_Temp();
        DataTable dt = invoiceBal.getInvoiceByID(Id);
        if (dt.Rows.Count > 0)
        {
            ddlCustomer.SelectedValue = dt.Rows[0]["CustomerID"].ToString();
            txtEmail.Text = dt.Rows[0]["Email"].ToString();
            txtBillingAddress.Text = dt.Rows[0]["BillingAddress"].ToString();
            txtInvoiceID.Text = dt.Rows[0]["InvoiceID"].ToString();
            txtInvoiceNumber.Text = dt.Rows[0]["InvoiceNo"].ToString();
            txtTerm.Text = dt.Rows[0]["TermID"].ToString();
            txtInvoiceDate.Text = SCGL_Common.CheckDateTime(dt.Rows[0]["InvoiceDate"]).ToShortDateString();
            txtDueDate.Text = SCGL_Common.CheckDateTime(dt.Rows[0]["DueDate"]).ToShortDateString();
            txttotal2.Text = dt.Rows[0]["Total"].ToString();
            txtDiscount.Text = dt.Rows[0]["Discount"].ToString();
            txtFrom.Text = dt.Rows[0]["From"].ToString();
            txtTo.Text = dt.Rows[0]["To"].ToString();
            txtContainerNo.Text = dt.Rows[0]["ContainerNo"].ToString();
            txtOrCountry.Text = dt.Rows[0]["Origin_Country"].ToString();
            txtDestCountry.Text = dt.Rows[0]["Destination_Country"].ToString();
            txtVessel.Text = dt.Rows[0]["Vessel"].ToString();
            txtFormENo.Text = dt.Rows[0]["FormENo"].ToString();
            txtFreight.Text = dt.Rows[0]["Freight"].ToString();
            txtNetWeight.Text = dt.Rows[0]["NetWeight"].ToString();
            txtGrossWeight.Text = dt.Rows[0]["GrossWeight"].ToString();
            txtproformaNo.Text = dt.Rows[0]["ProformaNo"].ToString();
            txtInsurance.Text = dt.Rows[0]["Insurance"].ToString();
            txtExporter.Text = dt.Rows[0]["Exporter"].ToString();
            txtConsignee.Text = dt.Rows[0]["Consignee"].ToString();
            txtBuyer.Text = dt.Rows[0]["Buyer"].ToString();
            txtExportersRef.Text = dt.Rows[0]["ExportersRef"].ToString();
            txtNote.Text = dt.Rows[0]["Note"].ToString();
            btnSave.Text = "Update";
        }
    }

    public void Bind_Customer()
    {
        SCGL_Common.Bind_DropDown(ddlCustomer, "vt_SCGL_BindCustomer", "CustomerName", "ID");
    }

    public void Bind_Product_Dropdown()
    {
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            DropDownList ddlItem = GV_InvoiceDetail.Rows[i].FindControl("ddlItem") as DropDownList;
            if (ddlItem != null)
            {
                SCGL_Common.Bind_DropDown(ddlItem, "vt_SCGL_SP_GetFishCart", "item", "Inventory_ID");
            }
        }
    }

    int FishId = 0;
    int FishGradeId = 0;
    int FishId1 = 0;
    int FishGradeId1 = 0;

    public void Bind_FishName_Dropdown()
    {
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown()
    {
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            DropDownList ddlFishDetail = GV_InvoiceDetail.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFish = GV_InvoiceDetail.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i == 0)
            {
                FishId = SCGL_Common.Convert_ToInt(ddlFish.SelectedValue);
            }
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail = inv_dtl.getInvoiceDetailByInvoiceID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                FishId = SCGL_Common.Convert_ToInt(dtInvoiceDetail.Rows[0]["FishID"].ToString());
            }
            SCGL_Common.Bind_DropDown(ddlFishDetail, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId);
            ddlFishDetail.SelectedValue = SCGL_Common.Convert_ToString(Product_Table.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId = int.Parse(ddlFishDetail.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown()
    {
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail = inv_dtl.getInvoiceDetailByInvoiceID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));

                FishGradeId = SCGL_Common.Convert_ToInt(dtInvoiceDetail.Rows[0]["FishGradeID"].ToString());
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId, "@GradId", FishGradeId);
        }
    }

    public void Bind_FishName_Dropdown1()
    {
        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail1.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table2.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId1 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown1()
    {
        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail1.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail1 = inv_dtl.getInvoiceDetailByInvoiceID1(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail1.Rows.Count > 0)
                {
                    FishId1 = SCGL_Common.Convert_ToInt(dtInvoiceDetail1.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId1);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table2.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId1 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown1()
    {
        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail1.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail1 = inv_dtl.getInvoiceDetailByInvoiceID1(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail1.Rows.Count > 0)
                {
                    FishGradeId1 = SCGL_Common.Convert_ToInt(dtInvoiceDetail1.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId1, "@GradId", FishGradeId1);
        }
    }



    public void Bind_Product_Dropdown1()
    {
        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            DropDownList ddlItem = GV_InvoiceDetail1.Rows[i].FindControl("ddlItem") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlItem, "vt_SCGL_SP_GetFishCart", "item", "Inventory_ID");
        }
    }

    private void SetInitialRow()
    {
        DataTable dt = new DataTable();
        DataRow dr = null;
        dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr = dt.NewRow();
            dt.Rows.Add(dr);
        }

        ViewState["CurrentTable"] = dt;
        GV_InvoiceDetail.DataSource = dt;
        GV_InvoiceDetail.DataBind();
        Bind_FishName_Dropdown();
        Bind_FishGrade_Dropdown();
        Bind_FishSize_Dropdown();

        DataTable dt2 = new DataTable();
        DataRow dr2 = null;
        dt2.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt2.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr2 = dt2.NewRow();
            dt2.Rows.Add(dr2);
        }
        ViewState["CurrentTable2"] = dt2;
        GV_InvoiceDetail1.DataSource = dt2;
        GV_InvoiceDetail1.DataBind();
        Bind_FishName_Dropdown1();
        Bind_FishGrade_Dropdown1();
        Bind_FishSize_Dropdown1();

        DataTable dt3 = new DataTable();
        DataRow dr3 = null;
        dt3.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt3.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr3 = dt3.NewRow();
            dt3.Rows.Add(dr3);
        }
        ViewState["CurrentTable3"] = dt3;
        GV_InvoiceDetail3.DataSource = dt3;
        GV_InvoiceDetail3.DataBind();
        Bind_FishName_Dropdown3();
        Bind_FishGrade_Dropdown3();
        Bind_FishSize_Dropdown3();

        DataTable dt4 = new DataTable();
        DataRow dr4 = null;
        dt4.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt4.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr4 = dt4.NewRow();
            dt4.Rows.Add(dr4);
        }
        ViewState["CurrentTable4"] = dt4;
        GV_InvoiceDetail4.DataSource = dt4;
        GV_InvoiceDetail4.DataBind();
        Bind_FishName_Dropdown4();
        Bind_FishGrade_Dropdown4();
        Bind_FishSize_Dropdown4();

        DataTable dt5 = new DataTable();
        DataRow dr5 = null;
        dt5.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt5.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr5 = dt5.NewRow();
            dt5.Rows.Add(dr5);
        }
        ViewState["CurrentTable5"] = dt5;
        GV_InvoiceDetail5.DataSource = dt5;
        GV_InvoiceDetail5.DataBind();
        Bind_FishName_Dropdown5();
        Bind_FishGrade_Dropdown5();
        Bind_FishSize_Dropdown5();


        DataTable dt6 = new DataTable();
        DataRow dr6 = null;
        dt6.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt6.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr6 = dt6.NewRow();
            dt6.Rows.Add(dr6);
        }
        ViewState["CurrentTable6"] = dt6;
        GV_InvoiceDetail6.DataSource = dt6;
        GV_InvoiceDetail6.DataBind();
        Bind_FishName_Dropdown6();
        Bind_FishGrade_Dropdown6();
        Bind_FishSize_Dropdown6();

        DataTable dt7 = new DataTable();
        DataRow dr7 = null;
        dt7.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt7.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr7 = dt7.NewRow();
            dt7.Rows.Add(dr7);
        }
        ViewState["CurrentTable7"] = dt7;
        GV_InvoiceDetail7.DataSource = dt7;
        GV_InvoiceDetail7.DataBind();
        Bind_FishName_Dropdown7();
        Bind_FishGrade_Dropdown7();
        Bind_FishSize_Dropdown7();

        DataTable dt8 = new DataTable();
        DataRow dr8 = null;
        dt8.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt8.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr8 = dt8.NewRow();
            dt8.Rows.Add(dr8);
        }
        ViewState["CurrentTable8"] = dt8;
        GV_InvoiceDetail8.DataSource = dt8;
        GV_InvoiceDetail8.DataBind();
        Bind_FishName_Dropdown8();
        Bind_FishGrade_Dropdown8();
        Bind_FishSize_Dropdown8();

        DataTable dt9 = new DataTable();
        DataRow dr9 = null;
        dt9.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt9.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr9 = dt9.NewRow();
            dt9.Rows.Add(dr9);
        }
        ViewState["CurrentTable9"] = dt9;
        GV_InvoiceDetail9.DataSource = dt9;
        GV_InvoiceDetail9.DataBind();
        Bind_FishName_Dropdown9();
        Bind_FishGrade_Dropdown9();
        Bind_FishSize_Dropdown9();

        DataTable dt10 = new DataTable();
        DataRow dr10 = null;
        dt10.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt10.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr10 = dt10.NewRow();
            dt10.Rows.Add(dr10);
        }
        ViewState["CurrentTable10"] = dt10;
        GV_InvoiceDetail10.DataSource = dt10;
        GV_InvoiceDetail10.DataBind();
        Bind_FishName_Dropdown10();
        Bind_FishGrade_Dropdown10();
        Bind_FishSize_Dropdown10();

        DataTable dt11 = new DataTable();
        DataRow dr11 = null;
        dt11.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt11.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr11 = dt11.NewRow();
            dt11.Rows.Add(dr11);
        }
        ViewState["CurrentTable11"] = dt11;
        GV_InvoiceDetail11.DataSource = dt11;
        GV_InvoiceDetail11.DataBind();
        Bind_FishName_Dropdown11();
        Bind_FishGrade_Dropdown11();
        Bind_FishSize_Dropdown11();

        DataTable dt12 = new DataTable();
        DataRow dr12 = null;
        dt12.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt12.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr12 = dt12.NewRow();
            dt12.Rows.Add(dr12);
        }
        ViewState["CurrentTable12"] = dt12;
        GV_InvoiceDetail12.DataSource = dt12;
        GV_InvoiceDetail12.DataBind();
        Bind_FishName_Dropdown12();
        Bind_FishGrade_Dropdown12();
        Bind_FishSize_Dropdown12();

        DataTable dt13 = new DataTable();
        DataRow dr13 = null;
        dt13.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt13.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr13 = dt13.NewRow();
            dt13.Rows.Add(dr13);
        }
        ViewState["CurrentTable13"] = dt13;
        GV_InvoiceDetail13.DataSource = dt13;
        GV_InvoiceDetail13.DataBind();
        Bind_FishName_Dropdown13();
        Bind_FishGrade_Dropdown13();
        Bind_FishSize_Dropdown13();

        DataTable dt14 = new DataTable();
        DataRow dr14 = null;
        dt14.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt14.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr14 = dt14.NewRow();
            dt14.Rows.Add(dr14);
        }
        ViewState["CurrentTable14"] = dt14;
        GV_InvoiceDetail14.DataSource = dt14;
        GV_InvoiceDetail14.DataBind();
        Bind_FishName_Dropdown14();
        Bind_FishGrade_Dropdown14();
        Bind_FishSize_Dropdown14();

        DataTable dt15 = new DataTable();
        DataRow dr15 = null;
        dt15.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        dt15.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        for (int i = 0; i < 1; i++)
        {
            dr15 = dt15.NewRow();
            dt15.Rows.Add(dr15);
        }
        ViewState["CurrentTable15"] = dt15;
        GV_InvoiceDetail15.DataSource = dt15;
        GV_InvoiceDetail15.DataBind();
        Bind_FishName_Dropdown15();
        Bind_FishGrade_Dropdown15();
        Bind_FishSize_Dropdown15();
    }

    protected void btnaddnewRow_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow2 = (DropDownList)GV_InvoiceDetail.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow2 = (DropDownList)GV_InvoiceDetail.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow2.SelectedValue) > 0 && int.Parse(ddlFishGradeRow2.SelectedValue) > 0)
        {
            AddNewRowToGrid();
            for (int i = 1; i < GV_InvoiceDetail.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "1";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    public void AddNewRowToGrid()
    {
        try
        {
            Product_Table.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
            {
                if (GV_InvoiceDetail.Rows[i].Visible)
                {
                    DataRow drCurrentRow = Product_Table.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow["txtDescription"] = txtDescription.Text;
                    drCurrentRow["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow["txtRate"] = txtRate.Text;
                    drCurrentRow["txtAmount"] = Convert.ToInt64(Convert.ToDouble(txtTotalPrice.Value));
                    drCurrentRow["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                        Product_Table.Rows.Add(drCurrentRow);
                    }
                }
            }
            DataRow dr = Product_Table.NewRow();
            dr[0] = "--Select Item--";
            Product_Table.Rows.Add(dr);
            GV_InvoiceDetail.DataSource = Product_Table;
            GV_InvoiceDetail.DataBind();
            Bind_FishName_Dropdown();
            Bind_FishGrade_Dropdown();
            Bind_FishSize_Dropdown();
            for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public DataTable Product_DataSource()
    {
        DataTable dtProduct = Product_Table;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            if (GV_InvoiceDetail.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = Convert.ToInt64(Convert.ToDouble(txtTotalPrice.Value));
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }

        for (int pr = 0; pr < Product_Table.Rows.Count; pr++)
        {
            if (Product_Table.Rows[pr]["Fish_Value"].ToString() == "")
            {
                Product_Table.Rows.RemoveAt(pr);
                pr--;
            }
        }
        for (int pr = 0; pr < Product_Table.Rows.Count; pr++)
        {
            if (Product_Table.Rows[pr]["Fish_GradeValue"].ToString() == "")
            {
                Product_Table.Rows.RemoveAt(pr);
                pr--;
            }
        }
        for (int pr = 0; pr < Product_Table.Rows.Count; pr++)
        {
            if (Product_Table.Rows[pr]["Fish_SizeValue"].ToString() == "")
            {
                Product_Table.Rows.RemoveAt(pr);
                pr--;
            }
        }
        return dtProduct;
    }

    private DataTable Product_Table
    {
        get
        {
            DataTable dt = (DataTable)ViewState["CurrentTable"];
            if (dt == null)
            {
                dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));

                for (int i = 0; i < 10; i++)
                {
                    dt.Rows.Add(dt.NewRow());
                }
            }
            ViewState["CurrentTable"] = dt;
            return dt;
        }
        set
        {
            ViewState["CurrentTable"] = value;
        }
    }

    public void Reload_JS()
    {
        SCGL_Common.ReloadJS(this, "MyDate();");
        SCGL_Common.ReloadJS(this, "$('#Mytab').tabs();");
        SCGL_Common.ReloadJS(this, "DecimalOnly();");
        //SCGL_Common.ReloadJS(this, "calculateSum();");
        SCGL_Common.ReloadJS(this, "vale();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction();");
        SCGL_Common.ReloadJS(this, "vale2();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction2();");
        SCGL_Common.ReloadJS(this, "vale3();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction3();");
        SCGL_Common.ReloadJS(this, "vale4();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction4();");
        SCGL_Common.ReloadJS(this, "vale5();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction5();");
        SCGL_Common.ReloadJS(this, "vale6();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction6();");
        SCGL_Common.ReloadJS(this, "vale7();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction7();");
        SCGL_Common.ReloadJS(this, "vale8();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction8();");
        SCGL_Common.ReloadJS(this, "vale9();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction9();");
        SCGL_Common.ReloadJS(this, "vale10();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction10();");
        SCGL_Common.ReloadJS(this, "vale11();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction11();");
        SCGL_Common.ReloadJS(this, "vale12();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction12();");
        SCGL_Common.ReloadJS(this, "vale13();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction13();");
        SCGL_Common.ReloadJS(this, "vale14();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction14();");
        SCGL_Common.ReloadJS(this, "vale15();");
        SCGL_Common.ReloadJS(this, "GrossTotalDeduction15();");
        SCGL_Common.ReloadJS(this, "TxtBlur();");
    }

    protected void GV_InvoiceDetail1_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail1.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail1.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail1.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail1.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail1.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail1.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail1.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail1.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "2";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    protected void GV_InvoiceDetail_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail.Rows[e.RowIndex].Cells[2].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail.Rows[e.RowIndex].Cells[3].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail.Rows[e.RowIndex].Cells[4].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail.Rows[e.RowIndex].Cells[5].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail.Rows[e.RowIndex].Cells[6].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "1";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    protected void btnSave_Click(object sender, EventArgs e)
    {
        try
        {
            SCGL_Session SBO = (SCGL_Session)Session["SessionBO"];
            if (SBO.Can_Insert == true)
            {
                if (Check_Validation())
                {
                    if (Insert_Invoice())
                    {
                        if (btnSave.Text == "Save")
                        {
                            btnSave.Visible = false;
                            lblSuccessMsg.InnerHtml = "Proforma Invoice Created Successfully";
                        }
                        else
                        {
                            lblSuccessMsg.InnerHtml = "Proforma Invoice Updated Successfully";
                        }
                        SCGL_Common.Success_Message(this.Page, "ProformaInvoice_Views.aspx");
                    }
                }
            }
            else
                JQ.showStatusMsg(this, "3", "User not Allowed to Insert New Record");
        }
        catch (Exception ex)
        {
            lblNewError.InnerHtml = ex.Message;
            SCGL_Common.Error_Message(this.Page);
        }
    }

    public bool Insert_Invoice()
    {
        SqlConnection con = new SqlConnection(SCGL_Common.ConnectionString);
        con.Open();
        SqlTransaction trans = con.BeginTransaction();
        bool isCreated = false;
        try
        {
            SCGL_Session SBO = (SCGL_Session)Session["SessionBO"];
            if (btnSave.Text == "Save")
            {
                BALInvoice.InvoiceID = -1;
            }
            else
            {
                BALInvoice.InvoiceID = SCGL_Common.Convert_ToInt(Request.QueryString["Id"]);
            }
            BALInvoice.CustomerID = SCGL_Common.Convert_ToInt(ddlCustomer.SelectedValue);
            BALInvoice.Email = txtEmail.Text;
            BALInvoice.BillingAddress = txtBillingAddress.Text;
            BALInvoice.Invoice_No = txtInvoiceNumber.Text;  //  Database column name for this field : InvoiceNo
            BALInvoice.TermID = txtTerm.Text;
            BALInvoice.InvoiceDate = SCGL_Common.CheckDateTime(txtInvoiceDate.Text);
            BALInvoice.DueDate = SCGL_Common.CheckDateTime(txtDueDate.Text);
            BALInvoice.Total = SCGL_Common.Convert_ToDecimal(txttotal2.Text);
            BALInvoice.LoginID = SBO.UserID;
            BALInvoice.FinYearID = SBO.FinYearID;
            //BALInvoice.From = txtFrom.Text;
            //BALInvoice.To = txtTo.Text;
            //BALInvoice.GrossWeight = SCGL_Common.Convert_ToDecimal(txtGrossWeight.Text);
            //BALInvoice.Origin_Country = txtOrCountry.Text;
            //BALInvoice.Destination_Country = txtDestCountry.Text;
            //BALInvoice.Vessel = txtVessel.Text;
            //BALInvoice.FormENo = txtFormENo.Text;
            //BALInvoice.Freight = txtFreight.Text;
            //BALInvoice.NetWeight = SCGL_Common.Convert_ToDecimal(txtNetWeight.Text);
            //BALInvoice.ContainerNo = txtContainerNo.Text;
            //BALInvoice.ProformaNo = txtproformaNo.Text;
            //BALInvoice.Insurance = txtInsurance.Text;
            //BALInvoice.Exporter = txtExporter.Text;
            //BALInvoice.Consignee = txtConsignee.Text;
            //BALInvoice.Buyer = txtBuyer.Text;
            //BALInvoice.ExportersRef = txtExportersRef.Text;
            //BALInvoice.Note = txtNote.Text;
            int InvoiceID = BALInvoice.CreateModifyProformaInvoice(BALInvoice, trans);
            if (InvoiceID > 0)
            {
                txtInvoiceID.Text = InvoiceID.ToString();
                BALInvoice.InvoiceNo = SCGL_Common.Convert_ToInt(txtInvoiceID.Text);
                if (btnSave.Text == "Update")
                {
                    BALInvoice.Delete_InvoiceDetail(BALInvoice.InvoiceNo, trans);
                    BALInvoice.Delete_Transaction(BALInvoice.InvoiceNo, trans);
                }
            //if (BALInvoice.CreateModifyProformaInvoice(BALInvoice, trans))
            //{
            //    BALInvoice.InvoiceNo = SCGL_Common.Convert_ToInt(txtInvoiceID.Text);
            //    if (btnSave.Text == "Update")
            //    {
            //        BALInvoice.Delete_InvoiceDetail(BALInvoice.InvoiceNo, trans);
            //        BALInvoice.Delete_Transaction(BALInvoice.InvoiceNo, trans);
            //    }
                int Counter = 0;
                DataTable dt = Record_for_Insert();
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    BALInvoice.InvoiceNo = int.Parse(txtInvoiceNumber.Text);
                    //BALInvoice.Description = SCGL_Common.Convert_ToDecimal(dt.Rows[i]["txtDescription"].ToString());
                    //BALInvoice.Quantity = SCGL_Common.Convert_ToDecimal(dt.Rows[i]["txtQuantity"].ToString());
                    //BALInvoice.Rate = SCGL_Common.Convert_ToDecimal(dt.Rows[i]["txtRate"].ToString());
                    //BALInvoice.Amount = SCGL_Common.Convert_ToDecimal(dt.Rows[i]["txtAmount"].ToString());
                    //BALInvoice.GridName = dt.Rows[i]["txtGridname"].ToString();
                    //BALInvoice.InventoryID = SCGL_Common.Convert_ToInt(dt.Rows[i]["lblInventoryId"].ToString());
                    //BALInvoice.FishID = int.Parse(dt.Rows[i]["Fish_Value"].ToString());
                    //BALInvoice.FishGradeID = int.Parse(dt.Rows[i]["Fish_GradeValue"].ToString());
                    //BALInvoice.FishSizeID = int.Parse(dt.Rows[i]["Fish_SizeValue"].ToString());
                    if (BALInvoice.CreateModifyInvoiceDetail(BALInvoice, trans))
                    {
                        Counter++;
                    }
                    else
                    {
                        Counter = 0;
                        break;
                    }
                }
                if (Counter > 0)
                {
                    trans.Commit();
                    isCreated = true;
                }
                else
                {
                    trans.Rollback();
                    isCreated = false;
                }
            }
            else
            {
                isCreated = false;
            }
            if (con.State == ConnectionState.Open)
            {
                con.Close();
            }
        }
        catch (Exception e)
        {
            trans.Rollback();
            isCreated = false;
            throw;
        }
        return isCreated;
    }

    public DataTable Record_for_Insert()
    {
        Product_Table = Product_DataSource();
        int Product_Rows = Product_Table.Rows.Count;
        Product_Table2 = Product_DataSource1();
        int Deduction_Rows = Product_Table2.Rows.Count;
        Product_Table3 = Product_DataSource3();
        int Deduction_Rows3 = Product_Table3.Rows.Count;
        Product_Table4 = Product_DataSource4();
        int Deduction_Rows4 = Product_Table4.Rows.Count;
        Product_Table5 = Product_DataSource5();
        int Deduction_Rows5 = Product_Table5.Rows.Count;
        Product_Table6 = Product_DataSource6();
        int Deduction_Rows6 = Product_Table6.Rows.Count;

        Product_Table7 = Product_DataSource7();
        int Deduction_Rows7 = Product_Table7.Rows.Count;
        Product_Table8 = Product_DataSource8();
        int Deduction_Rows8 = Product_Table8.Rows.Count;
        Product_Table9 = Product_DataSource9();
        int Deduction_Rows9 = Product_Table9.Rows.Count;
        Product_Table10 = Product_DataSource10();
        int Deduction_Rows10 = Product_Table10.Rows.Count;

        Product_Table11 = Product_DataSource11();
        int Deduction_Rows11 = Product_Table11.Rows.Count;
        Product_Table12 = Product_DataSource12();
        int Deduction_Rows12 = Product_Table12.Rows.Count;
        Product_Table13 = Product_DataSource13();
        int Deduction_Rows13 = Product_Table13.Rows.Count;
        Product_Table14 = Product_DataSource14();
        int Deduction_Rows14 = Product_Table14.Rows.Count;
        Product_Table15 = Product_DataSource15();
        int Deduction_Rows15 = Product_Table15.Rows.Count;


        int TotalRows = Product_Rows + Deduction_Rows + Deduction_Rows3 + Deduction_Rows4 + Deduction_Rows5 + Deduction_Rows6 + Deduction_Rows7 + Deduction_Rows8 + Deduction_Rows9 + Deduction_Rows10 + Deduction_Rows11 + Deduction_Rows12 + Deduction_Rows13 + Deduction_Rows14 + Deduction_Rows15;
        DataTable dtInsert = new DataTable();
        dtInsert.Merge(Product_Table);
        dtInsert.Merge(Product_Table2);
        dtInsert.Merge(Product_Table3);
        dtInsert.Merge(Product_Table4);
        dtInsert.Merge(Product_Table5);
        dtInsert.Merge(Product_Table6);
        dtInsert.Merge(Product_Table7);
        dtInsert.Merge(Product_Table8);
        dtInsert.Merge(Product_Table9);
        dtInsert.Merge(Product_Table10);
        dtInsert.Merge(Product_Table11);
        dtInsert.Merge(Product_Table12);
        dtInsert.Merge(Product_Table13);
        dtInsert.Merge(Product_Table14);
        dtInsert.Merge(Product_Table15);

        return dtInsert;
    }

    public bool Check_Validation()
    {
        bool IsValid = true;
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }

        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail1.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail1.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail1.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }
        for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail3.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail3.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail3.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }
        for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail4.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail4.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail4.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }
        for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail5.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail5.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail5.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }
        for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail6.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail6.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail6.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }
        for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail7.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail7.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail7.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }
        for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail8.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail8.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail8.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }
        for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail9.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail9.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail9.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }
        for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail10.Rows[i].FindControl("ddlFish") as DropDownList;
            DropDownList ddlFishGrade = GV_InvoiceDetail10.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            DropDownList ddlFishSize = GV_InvoiceDetail10.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (ddlFish.SelectedValue != "0")
            {
                if (ddlFishGrade.SelectedValue == "0" || ddlFishSize.SelectedValue == "0")
                {
                    SCGL_Common.Error_Message(this);
                    return false;
                }
            }
        }

        DropDownList ddlItem = (DropDownList)GV_InvoiceDetail.Rows[0].FindControl("ddlFish");
        if (ddlItem.SelectedValue == "0")
        {
            SCGL_Common.Error_ItemID(this);
            return false;
        }


        return IsValid;
    }

    public void GetMaxInvoiceId()
    {
        DataTable dt = new DataTable();
        dt = BALInvoice.GetMaxInvoiceId();
        foreach (DataRow row in dt.Rows)
        {
            int staticID = 1;
            int DynamicID = Convert.ToInt32(row["InvoiceID"]);
            int totalInvoiceID = staticID + DynamicID;
            txtInvoiceNumber.Text = Convert.ToInt32(totalInvoiceID).ToString();
        }
        txtInvoiceNumber.ReadOnly = true;
    }

    protected void btnClear_Click(object sender, EventArgs e)
    {
        SetInitialRow();
        hfSelectedTAB.Value = "1";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    protected void btnCancel_Click(object sender, EventArgs e)
    {
        Response.Redirect("ProformaInvoice_Views.aspx");
    }

    protected void ddlCustomer_SelectedIndexChanged(object sender, EventArgs e)
    {
        CustomerForm_BAL custbal = new CustomerForm_BAL();
        DataTable dt = custbal.getCustomerByID(SCGL_Common.Convert_ToInt(ddlCustomer.SelectedValue));
        txtBillingAddress.Text = dt.Rows[0]["BillAddressStreet"].ToString();
        txtEmail.Text = dt.Rows[0]["Email"].ToString();
        txtBuyer.Text = dt.Rows[0]["Buyer"].ToString();
        txtConsignee.Text = dt.Rows[0]["Consignee"].ToString();
        txtDestCountry.Text = dt.Rows[0]["DestCountry"].ToString();
        txtTo.Text = dt.Rows[0]["PortOfDischarge"].ToString();
    }

    protected void btnaddlines2_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow2 = (DropDownList)GV_InvoiceDetail1.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow2 = (DropDownList)GV_InvoiceDetail1.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow2.SelectedValue) > 0 && int.Parse(ddlFishGradeRow2.SelectedValue) > 0)
        {
            AddNewRowToGrid2();
            for (int i = 1; i < GV_InvoiceDetail1.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail1.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail1.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "2";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    public void AddNewRowToGrid2()
    {
        try
        {
            Product_Table2.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
            {
                if (GV_InvoiceDetail1.Rows[i].Visible)
                {
                    DataRow drCurrentRow2 = Product_Table2.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail1.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail1.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail1.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail1.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail1.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail1.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow2["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow2["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow2["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow2["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow2["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow2["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow2["txtDescription"] = txtDescription.Text;
                    drCurrentRow2["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow2["txtRate"] = txtRate.Text;
                    drCurrentRow2["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow2["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow2["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table2.Rows.Add(drCurrentRow2);
                }
            }
            DataRow dr = Product_Table2.NewRow();
            dr[0] = "--Select Item--";
            Product_Table2.Rows.Add(dr);
            GV_InvoiceDetail1.DataSource = Product_Table2;
            GV_InvoiceDetail1.DataBind();
            Bind_FishName_Dropdown1();
            Bind_FishGrade_Dropdown1();
            Bind_FishSize_Dropdown1();
            for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail1.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table2.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail1.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table2.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail1.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table2.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    private DataTable Product_Table2
    {
        get
        {
            DataTable dt2 = (DataTable)ViewState["CurrentTable2"];
            if (dt2 == null)
            {
                dt2.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt2.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt2.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt2.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt2.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt2.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt2.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt2.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt2.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt2.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt2.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt2.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt2.Rows.Add(dt2.NewRow());
                }
            }
            ViewState["CurrentTable2"] = dt2;
            return dt2;
        }
        set
        {
            ViewState["CurrentTable2"] = value;
        }
    }

    public DataTable Product_DataSource1()
    {
        DataTable dtProduct = Product_Table2;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            if (GV_InvoiceDetail1.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail1.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail1.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail1.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail1.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail1.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail1.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table2.Rows.Count; pr++)
            {
                if (Product_Table2.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table2.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table2.Rows.Count; pr++)
            {
                if (Product_Table2.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table2.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table2.Rows.Count; pr++)
            {
                if (Product_Table2.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table2.Rows.RemoveAt(pr);
                    pr--;
                }
            }

        }
        return dtProduct;

    }

    protected void btnClear2_Click(object sender, EventArgs e)
    {
        SetInitialRow();
        hfSelectedTAB.Value = "2";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    protected void ddlFish_SelectedIndexChanged(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        FishGradeId = int.Parse(ddlFish.SelectedValue);
        hf1g1.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g1.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "2";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    protected void ddlFishGrade_SelectedIndexChanged(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g1.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g1.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g1.Value;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail1.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);

        }

        hfSelectedTAB.Value = "2";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    protected void ddlFish_SelectedIndexChanged1(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g2.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g2.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }

        hfSelectedTAB.Value = "1";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    protected void ddlFishGrade_SelectedIndexChanged1(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g2.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g2.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g2.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }

        hfSelectedTAB.Value = "1";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }

    public void Gv_GetRows1()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["ItemRows"] = dr["RowNumber"].ToString();
        }
    }

    public void Gv_GetRows2()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail2_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["DeductionRows"] = dr["RowNumber"].ToString();
        }
    }

    private void SetInitialRow_For_Edit()
    {
        DataTable dt = new DataTable();
        DataRow dr = null;
        dt.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["ItemRows"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr = dt.NewRow();
                dt.Rows.Add(dr);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["ItemRows"]); i++)
            {
                dr = dt.NewRow();
                dt.Rows.Add(dr);
            }
        }

        DataTable dt2 = new DataTable();
        DataRow dr2 = null;
        dt2.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt2.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt2.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt2.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["DeductionRows"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr2 = dt2.NewRow();
                dt2.Rows.Add(dr2);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["DeductionRows"]); i++)
            {
                dr2 = dt2.NewRow();
                dt2.Rows.Add(dr2);
            }
        }

        DataTable dt3 = new DataTable();
        DataRow dr3 = null;
        dt3.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt3.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt3.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt3.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV3"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr3 = dt3.NewRow();
                dt3.Rows.Add(dr3);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV3"]); i++)
            {
                dr3 = dt3.NewRow();
                dt3.Rows.Add(dr3);
            }
        }

        DataTable dt4 = new DataTable();
        DataRow dr4 = null;
        dt4.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt4.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt4.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt4.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV4"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr4 = dt4.NewRow();
                dt4.Rows.Add(dr4);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV4"]); i++)
            {
                dr4 = dt4.NewRow();
                dt4.Rows.Add(dr4);
            }
        }

        DataTable dt5 = new DataTable();
        DataRow dr5 = null;
        dt5.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt5.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt5.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt5.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV5"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr5 = dt5.NewRow();
                dt5.Rows.Add(dr5);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV5"]); i++)
            {
                dr5 = dt5.NewRow();
                dt5.Rows.Add(dr5);
            }
        }
        DataTable dt6 = new DataTable();
        DataRow dr6 = null;
        dt6.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt6.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt6.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt6.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV6"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr6 = dt6.NewRow();
                dt6.Rows.Add(dr6);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV6"]); i++)
            {
                dr6 = dt6.NewRow();
                dt6.Rows.Add(dr6);
            }
        }


        DataTable dt7 = new DataTable();
        DataRow dr7 = null;
        dt7.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt7.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt7.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt7.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV7"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr7 = dt7.NewRow();
                dt7.Rows.Add(dr7);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV7"]); i++)
            {
                dr7 = dt7.NewRow();
                dt7.Rows.Add(dr7);
            }
        }

        DataTable dt8 = new DataTable();
        DataRow dr8 = null;
        dt8.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt8.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt8.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt8.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV8"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr8 = dt8.NewRow();
                dt8.Rows.Add(dr8);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV8"]); i++)
            {
                dr8 = dt8.NewRow();
                dt8.Rows.Add(dr8);
            }
        }

        DataTable dt9 = new DataTable();
        DataRow dr9 = null;
        dt9.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt9.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt9.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt9.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV9"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr9 = dt9.NewRow();
                dt9.Rows.Add(dr9);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV9"]); i++)
            {
                dr9 = dt9.NewRow();
                dt9.Rows.Add(dr9);
            }
        }

        DataTable dt10 = new DataTable();
        DataRow dr10 = null;
        dt10.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt10.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt10.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt10.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV10"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr10 = dt10.NewRow();
                dt10.Rows.Add(dr10);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV10"]); i++)
            {
                dr10 = dt10.NewRow();
                dt10.Rows.Add(dr10);
            }
        }

        DataTable dt11 = new DataTable();
        DataRow dr11 = null;
        dt11.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt11.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt11.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt11.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["ItemRows"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr11 = dt11.NewRow();
                dt11.Rows.Add(dr11);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["ItemRows"]); i++)
            {
                dr11 = dt11.NewRow();
                dt11.Rows.Add(dr11);
            }
        }

        DataTable dt12 = new DataTable();
        DataRow dr12 = null;
        dt12.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt12.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt12.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt12.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["DeductionRows"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr12 = dt12.NewRow();
                dt12.Rows.Add(dr12);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["DeductionRows"]); i++)
            {
                dr12 = dt12.NewRow();
                dt12.Rows.Add(dr12);
            }
        }

        DataTable dt13 = new DataTable();
        DataRow dr13 = null;
        dt13.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt13.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt13.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt13.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV13"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr13 = dt13.NewRow();
                dt13.Rows.Add(dr13);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV13"]); i++)
            {
                dr13 = dt13.NewRow();
                dt13.Rows.Add(dr13);
            }
        }

        DataTable dt14 = new DataTable();
        DataRow dr14 = null;
        dt14.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt14.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt14.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt14.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV14"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr14 = dt14.NewRow();
                dt14.Rows.Add(dr14);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV14"]); i++)
            {
                dr14 = dt14.NewRow();
                dt14.Rows.Add(dr14);
            }
        }

        DataTable dt15 = new DataTable();
        DataRow dr15 = null;
        dt15.Columns.Add(new DataColumn("RowNumber", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
        dt15.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtDescription", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtRate", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtAmount", typeof(string)));
        dt15.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
        dt15.Columns.Add(new DataColumn("txtGridName", typeof(string)));
        if (Convert.ToInt32(Session["GV15"]) < 1)
        {
            for (int i = 0; i < 1; i++)
            {
                dr15 = dt15.NewRow();
                dt15.Rows.Add(dr15);
            }
        }
        else
        {
            for (int i = 0; i < Convert.ToInt32(Session["GV15"]); i++)
            {
                dr15 = dt15.NewRow();
                dt15.Rows.Add(dr15);
            }
        }


        ViewState["CurrentTable"] = dt;
        GV_InvoiceDetail.DataSource = dt;
        GV_InvoiceDetail.DataBind();

        ViewState["CurrentTable2"] = dt2;
        GV_InvoiceDetail1.DataSource = dt2;
        GV_InvoiceDetail1.DataBind();

        ViewState["CurrentTable3"] = dt3;
        GV_InvoiceDetail3.DataSource = dt3;
        GV_InvoiceDetail3.DataBind();

        ViewState["CurrentTable4"] = dt4;
        GV_InvoiceDetail4.DataSource = dt4;
        GV_InvoiceDetail4.DataBind();

        ViewState["CurrentTable5"] = dt5;
        GV_InvoiceDetail5.DataSource = dt5;
        GV_InvoiceDetail5.DataBind();

        ViewState["CurrentTable6"] = dt6;
        GV_InvoiceDetail6.DataSource = dt6;
        GV_InvoiceDetail6.DataBind();

        ViewState["CurrentTable7"] = dt7;
        GV_InvoiceDetail7.DataSource = dt7;
        GV_InvoiceDetail7.DataBind();

        ViewState["CurrentTable8"] = dt8;
        GV_InvoiceDetail8.DataSource = dt8;
        GV_InvoiceDetail8.DataBind();

        ViewState["CurrentTable9"] = dt9;
        GV_InvoiceDetail9.DataSource = dt9;
        GV_InvoiceDetail9.DataBind();

        ViewState["CurrentTable10"] = dt10;
        GV_InvoiceDetail10.DataSource = dt10;
        GV_InvoiceDetail10.DataBind();

        ViewState["CurrentTable11"] = dt11;
        GV_InvoiceDetail11.DataSource = dt11;
        GV_InvoiceDetail11.DataBind();

        ViewState["CurrentTable12"] = dt12;
        GV_InvoiceDetail12.DataSource = dt12;
        GV_InvoiceDetail12.DataBind();

        ViewState["CurrentTable13"] = dt13;
        GV_InvoiceDetail13.DataSource = dt13;
        GV_InvoiceDetail13.DataBind();

        ViewState["CurrentTable14"] = dt14;
        GV_InvoiceDetail14.DataSource = dt14;
        GV_InvoiceDetail14.DataBind();

        ViewState["CurrentTable15"] = dt15;
        GV_InvoiceDetail15.DataSource = dt15;
        GV_InvoiceDetail15.DataBind();

        Bind_FishName_Dropdown();
        Bind_FishGrade_Dropdown();
        Bind_FishSize_Dropdown();

        Bind_FishName_Dropdown1();
        Bind_FishGrade_Dropdown1();
        Bind_FishSize_Dropdown1();

        Bind_FishName_Dropdown3();
        Bind_FishGrade_Dropdown3();
        Bind_FishSize_Dropdown3();

        Bind_FishName_Dropdown4();
        Bind_FishGrade_Dropdown4();
        Bind_FishSize_Dropdown4();

        Bind_FishName_Dropdown5();
        Bind_FishGrade_Dropdown5();
        Bind_FishSize_Dropdown5();

        Bind_FishName_Dropdown6();
        Bind_FishGrade_Dropdown6();
        Bind_FishSize_Dropdown6();

        Bind_FishName_Dropdown7();
        Bind_FishGrade_Dropdown7();
        Bind_FishSize_Dropdown7();

        Bind_FishName_Dropdown8();
        Bind_FishGrade_Dropdown8();
        Bind_FishSize_Dropdown8();

        Bind_FishName_Dropdown9();
        Bind_FishGrade_Dropdown9();
        Bind_FishSize_Dropdown9();

        Bind_FishName_Dropdown10();
        Bind_FishGrade_Dropdown10();
        Bind_FishSize_Dropdown10();


        Bind_FishName_Dropdown11();
        Bind_FishGrade_Dropdown11();
        Bind_FishSize_Dropdown11();

        Bind_FishName_Dropdown12();
        Bind_FishGrade_Dropdown12();
        Bind_FishSize_Dropdown12();

        Bind_FishName_Dropdown13();
        Bind_FishGrade_Dropdown13();
        Bind_FishSize_Dropdown13();

        Bind_FishName_Dropdown14();
        Bind_FishGrade_Dropdown14();
        Bind_FishSize_Dropdown14();

        Bind_FishName_Dropdown15();
        Bind_FishGrade_Dropdown15();
        Bind_FishSize_Dropdown15();

        Bind_Product_Dropdown();
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail1.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table2.Rows[i]["Fish_Item"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail1.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail1.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table2.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail3.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table3.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail3.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table3.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail4.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table4.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail4.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table4.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail5.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table5.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail5.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table5.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail6.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table6.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail6.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table6.Rows[i]["Fish_Grade"].ToString()));
        }


        for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail7.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table7.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail7.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table7.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail8.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table8.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail8.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table8.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail9.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table9.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail9.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table9.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail10.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table10.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail10.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table10.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail11.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table11.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail11.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table11.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail12.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table12.Rows[i]["Fish_Item"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail12.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table12.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail13.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table13.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail13.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table13.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail14.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table14.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail14.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table14.Rows[i]["Fish_Grade"].ToString()));
        }

        for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail15.Rows[i].FindControl("ddlFish") as DropDownList;
            if (i > 0)
            {
                cbox.Visible = false;
            }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table15.Rows[i]["Fish_Item"].ToString()));
        }
        for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
        {
            DropDownList cbox = GV_InvoiceDetail15.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (i > 0) { cbox.Visible = false; }
            cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table15.Rows[i]["Fish_Grade"].ToString()));
        }

    }

    public void FillGridInvoiceDetail()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail = inv_dtl.getInvoiceDetailByInvoiceID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail.Rows[i].FindControl("ddlFish") as DropDownList;

                DropDownList ddlFishGrade = GV_InvoiceDetail.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail.Rows[i]["FishSizeID"] != null && dtInvoiceDetail.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }

    public void FillGridInvoiceDetail1()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail1 = inv_dtl.getInvoiceDetailByInvoiceID1(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail1.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail1.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail1.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail1.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail1.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail1.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail1.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail1.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail1.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail1.Rows[i]["FishSizeID"] != null && dtInvoiceDetail1.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail1.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail1.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail1.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail1.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail1.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail1.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail1.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }


    int FishId3 = 0;
    int FishGradeId3 = 0;
    protected void GV_InvoiceDetail3_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail3.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail3.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail3.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail3.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail3.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail3.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail3.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail3.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }

        hfSelectedTAB.Value = "3";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail3()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail3 = inv_dtl.getInvoiceDetailByInvoiceID3(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail3.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail3.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail3.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail3.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail3.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail3.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail3.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail3.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail3.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail3.Rows[i]["FishSizeID"] != null && dtInvoiceDetail3.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail3.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail3.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail3.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail3.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail3.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail3.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail3.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines3_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow3 = (DropDownList)GV_InvoiceDetail3.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow3 = (DropDownList)GV_InvoiceDetail3.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow3.SelectedValue) > 0 && int.Parse(ddlFishGradeRow3.SelectedValue) > 0)
        {
            AddNewRowToGrid3();
            for (int i = 1; i < GV_InvoiceDetail3.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail3.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail3.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }

        hfSelectedTAB.Value = "3";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid3()
    {
        try
        {
            Product_Table3.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
            {
                if (GV_InvoiceDetail3.Rows[i].Visible)
                {
                    DataRow drCurrentRow3 = Product_Table3.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail3.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail3.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail3.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail3.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail3.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail3.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow3["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow3["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow3["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow3["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow3["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow3["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow3["txtDescription"] = txtDescription.Text;
                    drCurrentRow3["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow3["txtRate"] = txtRate.Text;
                    drCurrentRow3["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow3["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow3["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table3.Rows.Add(drCurrentRow3);
                }
            }
            DataRow dr = Product_Table3.NewRow();
            dr[0] = "--Select Item--";
            Product_Table3.Rows.Add(dr);
            GV_InvoiceDetail3.DataSource = Product_Table3;
            GV_InvoiceDetail3.DataBind();
            Bind_FishName_Dropdown3();
            Bind_FishGrade_Dropdown3();
            Bind_FishSize_Dropdown3();
            for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail3.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table3.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail3.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table3.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail3.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table3.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear3_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();

    //    hfSelectedTAB.Value = "3";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table3
    {
        get
        {
            DataTable dt3 = (DataTable)ViewState["CurrentTable3"];
            if (dt3 == null)
            {
                dt3.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt3.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt3.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt3.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt3.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt3.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt3.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt3.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt3.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt3.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt3.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt3.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt3.Rows.Add(dt3.NewRow());
                }
            }
            ViewState["CurrentTable3"] = dt3;
            return dt3;
        }
        set
        {
            ViewState["CurrentTable3"] = value;
        }
    }
    public DataTable Product_DataSource3()
    {
        DataTable dtProduct = Product_Table3;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
        {
            if (GV_InvoiceDetail3.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail3.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail3.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail3.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail3.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail3.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail3.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table3.Rows.Count; pr++)
            {
                if (Product_Table3.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table3.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table3.Rows.Count; pr++)
            {
                if (Product_Table3.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table3.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table3.Rows.Count; pr++)
            {
                if (Product_Table3.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table3.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows3()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail3_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV3"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged3(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g3.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g3.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }

        hfSelectedTAB.Value = "3";
        SCGL_Common.ReloadJS(this, "setTabHref();");

    }
    protected void ddlFishGrade_SelectedIndexChanged3(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g3.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g3.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g3.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail3.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }

        hfSelectedTAB.Value = "3";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown3()
    {
        for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail3.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table3.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId3 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown3()
    {
        for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail3.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail3 = inv_dtl.getInvoiceDetailByInvoiceID3(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail3.Rows.Count > 0)
                {
                    FishId3 = SCGL_Common.Convert_ToInt(dtInvoiceDetail3.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId3);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table3.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId3 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown3()
    {
        for (int i = 0; i < GV_InvoiceDetail3.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail3.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail3 = inv_dtl.getInvoiceDetailByInvoiceID3(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail3.Rows.Count > 0)
                {
                    FishGradeId3 = SCGL_Common.Convert_ToInt(dtInvoiceDetail3.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId3, "@GradId", FishGradeId3);
        }
    }


    int FishId4 = 0;
    int FishGradeId4 = 0;
    protected void GV_InvoiceDetail4_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail4.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail4.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail4.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail4.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail4.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail4.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail4.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail4.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }

        hfSelectedTAB.Value = "4";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail4()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail4 = inv_dtl.getInvoiceDetailByInvoiceID4(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail4.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail4.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail4.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail4.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail4.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail4.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail4.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail4.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail4.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail4.Rows[i]["FishSizeID"] != null && dtInvoiceDetail4.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail4.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail4.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail4.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail4.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail4.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail4.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail4.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines4_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow4 = (DropDownList)GV_InvoiceDetail4.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow4 = (DropDownList)GV_InvoiceDetail4.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow4.SelectedValue) > 0 && int.Parse(ddlFishGradeRow4.SelectedValue) > 0)
        {
            AddNewRowToGrid4();
            for (int i = 1; i < GV_InvoiceDetail4.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail4.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail4.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }

        hfSelectedTAB.Value = "4";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid4()
    {
        try
        {
            Product_Table4.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
            {
                if (GV_InvoiceDetail4.Rows[i].Visible)
                {
                    DataRow drCurrentRow4 = Product_Table4.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail4.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail4.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail4.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail4.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail4.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail4.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow4["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow4["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow4["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow4["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow4["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow4["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow4["txtDescription"] = txtDescription.Text;
                    drCurrentRow4["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow4["txtRate"] = txtRate.Text;
                    drCurrentRow4["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow4["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow4["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table4.Rows.Add(drCurrentRow4);
                }
            }
            DataRow dr = Product_Table4.NewRow();
            dr[0] = "--Select Item--";
            Product_Table4.Rows.Add(dr);
            GV_InvoiceDetail4.DataSource = Product_Table4;
            GV_InvoiceDetail4.DataBind();
            Bind_FishName_Dropdown4();
            Bind_FishGrade_Dropdown4();
            Bind_FishSize_Dropdown4();
            for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail4.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table4.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail4.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table4.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail4.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table4.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear4_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();

    //    hfSelectedTAB.Value = "4";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table4
    {
        get
        {
            DataTable dt4 = (DataTable)ViewState["CurrentTable4"];
            if (dt4 == null)
            {
                dt4.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt4.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt4.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt4.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt4.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt4.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt4.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt4.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt4.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt4.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt4.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt4.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt4.Rows.Add(dt4.NewRow());
                }
            }
            ViewState["CurrentTable4"] = dt4;
            return dt4;
        }
        set
        {
            ViewState["CurrentTable4"] = value;
        }
    }
    public DataTable Product_DataSource4()
    {
        DataTable dtProduct = Product_Table4;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
        {
            if (GV_InvoiceDetail4.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail4.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail4.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail4.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail4.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail4.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail4.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table4.Rows.Count; pr++)
            {
                if (Product_Table4.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table4.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table4.Rows.Count; pr++)
            {
                if (Product_Table4.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table4.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table4.Rows.Count; pr++)
            {
                if (Product_Table4.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table4.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows4()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail4_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV4"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged4(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g4.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g4.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "4";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    protected void ddlFishGrade_SelectedIndexChanged4(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g4.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g4.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g4.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail4.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "4";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown4()
    {
        for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail4.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table4.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId4 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown4()
    {
        for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail4.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail4 = inv_dtl.getInvoiceDetailByInvoiceID4(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail4.Rows.Count > 0)
                {
                    FishId4 = SCGL_Common.Convert_ToInt(dtInvoiceDetail4.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId4);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table4.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId4 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown4()
    {
        for (int i = 0; i < GV_InvoiceDetail4.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail4.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail4 = inv_dtl.getInvoiceDetailByInvoiceID4(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail4.Rows.Count > 0)
                {
                    FishGradeId4 = SCGL_Common.Convert_ToInt(dtInvoiceDetail4.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId4, "@GradId", FishGradeId4);
        }
    }

    int FishId5 = 0;
    int FishGradeId5 = 0;
    protected void GV_InvoiceDetail5_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail5.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail5.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail5.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail5.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail5.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail5.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail5.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail5.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "5";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail5()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail5 = inv_dtl.getInvoiceDetailByInvoiceID5(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail5.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail5.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail5.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail5.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail5.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail5.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail5.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail5.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail5.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail5.Rows[i]["FishSizeID"] != null && dtInvoiceDetail5.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail5.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail5.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail5.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail5.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail5.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail5.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail5.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines5_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow5 = (DropDownList)GV_InvoiceDetail5.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow5 = (DropDownList)GV_InvoiceDetail5.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow5.SelectedValue) > 0 && int.Parse(ddlFishGradeRow5.SelectedValue) > 0)
        {
            AddNewRowToGrid5();
            for (int i = 1; i < GV_InvoiceDetail5.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail5.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail5.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "5";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid5()
    {
        try
        {
            Product_Table5.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
            {
                if (GV_InvoiceDetail5.Rows[i].Visible)
                {
                    DataRow drCurrentRow5 = Product_Table5.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail5.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail5.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail5.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail5.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail5.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail5.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow5["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow5["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow5["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow5["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow5["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow5["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow5["txtDescription"] = txtDescription.Text;
                    drCurrentRow5["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow5["txtRate"] = txtRate.Text;
                    drCurrentRow5["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow5["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow5["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table5.Rows.Add(drCurrentRow5);
                }
            }
            DataRow dr = Product_Table5.NewRow();
            dr[0] = "--Select Item--";
            Product_Table5.Rows.Add(dr);
            GV_InvoiceDetail5.DataSource = Product_Table5;
            GV_InvoiceDetail5.DataBind();
            Bind_FishName_Dropdown5();
            Bind_FishGrade_Dropdown5();
            Bind_FishSize_Dropdown5();
            for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail5.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table5.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail5.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table5.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail5.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table5.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear5_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "5";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table5
    {
        get
        {
            DataTable dt5 = (DataTable)ViewState["CurrentTable5"];
            if (dt5 == null)
            {
                dt5.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt5.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt5.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt5.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt5.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt5.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt5.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt5.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt5.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt5.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt5.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt5.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt5.Rows.Add(dt5.NewRow());
                }
            }
            ViewState["CurrentTable5"] = dt5;
            return dt5;
        }
        set
        {
            ViewState["CurrentTable5"] = value;
        }
    }
    public DataTable Product_DataSource5()
    {
        DataTable dtProduct = Product_Table5;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
        {
            if (GV_InvoiceDetail5.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail5.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail5.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail5.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail5.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail5.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail5.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table5.Rows.Count; pr++)
            {
                if (Product_Table5.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table5.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table5.Rows.Count; pr++)
            {
                if (Product_Table5.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table5.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table5.Rows.Count; pr++)
            {
                if (Product_Table5.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table5.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows5()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail5_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV5"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged5(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g5.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g5.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "5";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    protected void ddlFishGrade_SelectedIndexChanged5(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g5.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g5.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g5.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail5.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "5";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown5()
    {
        for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail5.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table5.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId5 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown5()
    {
        for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail5.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail5 = inv_dtl.getInvoiceDetailByInvoiceID5(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail5.Rows.Count > 0)
                {
                    FishId5 = SCGL_Common.Convert_ToInt(dtInvoiceDetail5.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId5);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table5.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId5 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown5()
    {
        for (int i = 0; i < GV_InvoiceDetail5.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail5.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail5 = inv_dtl.getInvoiceDetailByInvoiceID5(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail5.Rows.Count > 0)
                {
                    FishGradeId5 = SCGL_Common.Convert_ToInt(dtInvoiceDetail5.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId5, "@GradId", FishGradeId5);
        }
    }

    int FishId6 = 0;
    int FishGradeId6 = 0;
    protected void GV_InvoiceDetail6_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail6.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail6.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail6.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail6.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail6.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail6.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail6.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail6.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "6";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail6()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail6 = inv_dtl.getInvoiceDetailByInvoiceID6(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail6.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail6.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail6.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail6.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail6.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail6.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail6.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail6.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail6.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail6.Rows[i]["FishSizeID"] != null && dtInvoiceDetail6.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail6.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail6.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail6.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail6.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail6.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail6.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail6.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines6_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow6 = (DropDownList)GV_InvoiceDetail6.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow6 = (DropDownList)GV_InvoiceDetail6.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow6.SelectedValue) > 0 && int.Parse(ddlFishGradeRow6.SelectedValue) > 0)
        {
            AddNewRowToGrid6();
            for (int i = 1; i < GV_InvoiceDetail6.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail6.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail6.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "6";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid6()
    {
        try
        {
            Product_Table6.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
            {
                if (GV_InvoiceDetail6.Rows[i].Visible)
                {
                    DataRow drCurrentRow6 = Product_Table6.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[6].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail6.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail6.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail6.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail6.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail6.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail6.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow6["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow6["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow6["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow6["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow6["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow6["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow6["txtDescription"] = txtDescription.Text;
                    drCurrentRow6["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow6["txtRate"] = txtRate.Text;
                    drCurrentRow6["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow6["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow6["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table6.Rows.Add(drCurrentRow6);
                }
            }
            DataRow dr = Product_Table6.NewRow();
            dr[0] = "--Select Item--";
            Product_Table6.Rows.Add(dr);
            GV_InvoiceDetail6.DataSource = Product_Table6;
            GV_InvoiceDetail6.DataBind();
            Bind_FishName_Dropdown6();
            Bind_FishGrade_Dropdown6();
            Bind_FishSize_Dropdown6();
            for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail6.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table6.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail6.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table6.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail6.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table6.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear6_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "6";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table6
    {
        get
        {
            DataTable dt6 = (DataTable)ViewState["CurrentTable6"];
            if (dt6 == null)
            {
                dt6.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt6.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt6.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt6.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt6.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt6.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt6.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt6.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt6.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt6.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt6.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt6.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt6.Rows.Add(dt6.NewRow());
                }
            }
            ViewState["CurrentTable6"] = dt6;
            return dt6;
        }
        set
        {
            ViewState["CurrentTable6"] = value;
        }
    }
    public DataTable Product_DataSource6()
    {
        DataTable dtProduct = Product_Table6;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
        {
            if (GV_InvoiceDetail6.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail6.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail6.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail6.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail6.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail6.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail6.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table6.Rows.Count; pr++)
            {
                if (Product_Table6.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table6.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table6.Rows.Count; pr++)
            {
                if (Product_Table6.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table6.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table6.Rows.Count; pr++)
            {
                if (Product_Table6.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table6.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows6()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail6_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV6"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged6(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g6.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g6.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "6";
        SCGL_Common.ReloadJS(this, "setTabHref();");

    }
    protected void ddlFishGrade_SelectedIndexChanged6(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g6.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g6.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g6.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail6.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "6";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown6()
    {
        for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail6.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table6.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId6 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown6()
    {
        for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail6.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail6 = inv_dtl.getInvoiceDetailByInvoiceID6(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail6.Rows.Count > 0)
                {
                    FishId6 = SCGL_Common.Convert_ToInt(dtInvoiceDetail6.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId6);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table6.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId6 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown6()
    {
        for (int i = 0; i < GV_InvoiceDetail6.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail6.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail6 = inv_dtl.getInvoiceDetailByInvoiceID6(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail6.Rows.Count > 0)
                {
                    FishGradeId6 = SCGL_Common.Convert_ToInt(dtInvoiceDetail6.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId6, "@GradId", FishGradeId6);
        }
    }

    int FishId7 = 0;
    int FishGradeId7 = 0;
    protected void GV_InvoiceDetail7_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail7.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail7.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail7.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail7.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail7.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail7.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail7.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail7.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "7";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail7()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail7 = inv_dtl.getInvoiceDetailByInvoiceID7(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail7.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail7.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail7.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail7.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail7.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail7.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail7.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail7.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail7.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail7.Rows[i]["FishSizeID"] != null && dtInvoiceDetail7.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail7.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail7.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail7.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail7.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail7.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail7.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail7.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines7_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow7 = (DropDownList)GV_InvoiceDetail7.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow7 = (DropDownList)GV_InvoiceDetail7.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow7.SelectedValue) > 0 && int.Parse(ddlFishGradeRow7.SelectedValue) > 0)
        {
            AddNewRowToGrid7();
            for (int i = 1; i < GV_InvoiceDetail7.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail7.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail7.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "7";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid7()
    {
        try
        {
            Product_Table7.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
            {
                if (GV_InvoiceDetail7.Rows[i].Visible)
                {
                    DataRow drCurrentRow7 = Product_Table7.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail7.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail7.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail7.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail7.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail7.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail7.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow7["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow7["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow7["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow7["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow7["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow7["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow7["txtDescription"] = txtDescription.Text;
                    drCurrentRow7["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow7["txtRate"] = txtRate.Text;
                    drCurrentRow7["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow7["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow7["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table7.Rows.Add(drCurrentRow7);
                }
            }
            DataRow dr = Product_Table7.NewRow();
            dr[0] = "--Select Item--";
            Product_Table7.Rows.Add(dr);
            GV_InvoiceDetail7.DataSource = Product_Table7;
            GV_InvoiceDetail7.DataBind();
            Bind_FishName_Dropdown7();
            Bind_FishGrade_Dropdown7();
            Bind_FishSize_Dropdown7();
            for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail7.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table7.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail7.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table7.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail7.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table7.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear7_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "7";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table7
    {
        get
        {
            DataTable dt7 = (DataTable)ViewState["CurrentTable7"];
            if (dt7 == null)
            {
                dt7.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt7.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt7.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt7.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt7.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt7.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt7.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt7.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt7.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt7.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt7.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt7.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt7.Rows.Add(dt7.NewRow());
                }
            }
            ViewState["CurrentTable7"] = dt7;
            return dt7;
        }
        set
        {
            ViewState["CurrentTable7"] = value;
        }
    }
    public DataTable Product_DataSource7()
    {
        DataTable dtProduct = Product_Table7;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
        {
            if (GV_InvoiceDetail7.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail7.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail7.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail7.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail7.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail7.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail7.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table7.Rows.Count; pr++)
            {
                if (Product_Table7.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table7.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table7.Rows.Count; pr++)
            {
                if (Product_Table7.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table7.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table7.Rows.Count; pr++)
            {
                if (Product_Table7.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table7.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows7()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail7_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV7"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged7(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g7.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g7.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "7";
        SCGL_Common.ReloadJS(this, "setTabHref();");

    }
    protected void ddlFishGrade_SelectedIndexChanged7(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g7.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g7.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g7.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail7.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "7";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown7()
    {
        for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail7.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table7.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId7 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown7()
    {
        for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail7.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail7 = inv_dtl.getInvoiceDetailByInvoiceID7(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail7.Rows.Count > 0)
                {
                    FishId7 = SCGL_Common.Convert_ToInt(dtInvoiceDetail7.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId7);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table7.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId7 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown7()
    {
        for (int i = 0; i < GV_InvoiceDetail7.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail7.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail7 = inv_dtl.getInvoiceDetailByInvoiceID7(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail7.Rows.Count > 0)
                {
                    FishGradeId7 = SCGL_Common.Convert_ToInt(dtInvoiceDetail7.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId7, "@GradId", FishGradeId7);
        }
    }


    int FishId8 = 0;
    int FishGradeId8 = 0;
    protected void GV_InvoiceDetail8_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail8.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail8.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail8.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail8.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail8.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail8.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail8.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail8.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "8";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail8()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail8 = inv_dtl.getInvoiceDetailByInvoiceID8(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail8.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail8.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail8.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail8.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail8.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail8.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail8.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail8.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail8.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail8.Rows[i]["FishSizeID"] != null && dtInvoiceDetail8.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail8.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail8.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail8.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail8.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail8.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail8.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail8.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines8_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow8 = (DropDownList)GV_InvoiceDetail8.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow8 = (DropDownList)GV_InvoiceDetail8.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow8.SelectedValue) > 0 && int.Parse(ddlFishGradeRow8.SelectedValue) > 0)
        {
            AddNewRowToGrid8();
            for (int i = 1; i < GV_InvoiceDetail8.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail8.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail8.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "8";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid8()
    {
        try
        {
            Product_Table8.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
            {
                if (GV_InvoiceDetail8.Rows[i].Visible)
                {
                    DataRow drCurrentRow8 = Product_Table8.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail8.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail8.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail8.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail8.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail8.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail8.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow8["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow8["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow8["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow8["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow8["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow8["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow8["txtDescription"] = txtDescription.Text;
                    drCurrentRow8["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow8["txtRate"] = txtRate.Text;
                    drCurrentRow8["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow8["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow8["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table8.Rows.Add(drCurrentRow8);
                }
            }
            DataRow dr = Product_Table8.NewRow();
            dr[0] = "--Select Item--";
            Product_Table8.Rows.Add(dr);
            GV_InvoiceDetail8.DataSource = Product_Table8;
            GV_InvoiceDetail8.DataBind();
            Bind_FishName_Dropdown8();
            Bind_FishGrade_Dropdown8();
            Bind_FishSize_Dropdown8();
            for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail8.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table8.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail8.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table8.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail8.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table8.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear8_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "8";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table8
    {
        get
        {
            DataTable dt8 = (DataTable)ViewState["CurrentTable8"];
            if (dt8 == null)
            {
                dt8.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt8.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt8.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt8.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt8.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt8.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt8.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt8.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt8.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt8.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt8.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt8.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt8.Rows.Add(dt8.NewRow());
                }
            }
            ViewState["CurrentTable8"] = dt8;
            return dt8;
        }
        set
        {
            ViewState["CurrentTable8"] = value;
        }
    }
    public DataTable Product_DataSource8()
    {
        DataTable dtProduct = Product_Table8;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
        {
            if (GV_InvoiceDetail8.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail8.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail8.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail8.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail8.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail8.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail8.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table8.Rows.Count; pr++)
            {
                if (Product_Table8.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table8.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table8.Rows.Count; pr++)
            {
                if (Product_Table8.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table8.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table8.Rows.Count; pr++)
            {
                if (Product_Table8.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table8.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows8()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail8_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV8"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged8(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g8.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g8.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "8";
        SCGL_Common.ReloadJS(this, "setTabHref();");

    }
    protected void ddlFishGrade_SelectedIndexChanged8(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g8.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g8.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g8.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail8.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "8";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown8()
    {
        for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail8.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table8.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId8 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown8()
    {
        for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail8.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail8 = inv_dtl.getInvoiceDetailByInvoiceID8(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail8.Rows.Count > 0)
                {
                    FishId8 = SCGL_Common.Convert_ToInt(dtInvoiceDetail8.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId8);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table8.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId8 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown8()
    {
        for (int i = 0; i < GV_InvoiceDetail8.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail8.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail8 = inv_dtl.getInvoiceDetailByInvoiceID8(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail8.Rows.Count > 0)
                {
                    FishGradeId8 = SCGL_Common.Convert_ToInt(dtInvoiceDetail8.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId8, "@GradId", FishGradeId8);
        }
    }

    int FishId9 = 0;
    int FishGradeId9 = 0;
    protected void GV_InvoiceDetail9_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail9.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail9.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail9.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail9.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail9.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail9.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail9.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail9.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "9";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail9()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail9 = inv_dtl.getInvoiceDetailByInvoiceID9(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail9.Rows.Count; i++)
            {

                DropDownList ddlFish = GV_InvoiceDetail9.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail9.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail9.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail9.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail9.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail9.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail9.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail9.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail9.Rows[i]["FishSizeID"] != null && dtInvoiceDetail9.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail9.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail9.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail9.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail9.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail9.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail9.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail9.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines9_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow9 = (DropDownList)GV_InvoiceDetail9.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow9 = (DropDownList)GV_InvoiceDetail9.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow9.SelectedValue) > 0 && int.Parse(ddlFishGradeRow9.SelectedValue) > 0)
        {
            AddNewRowToGrid9();
            for (int i = 1; i < GV_InvoiceDetail9.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail9.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail9.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "9";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid9()
    {
        try
        {
            Product_Table9.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
            {
                if (GV_InvoiceDetail9.Rows[i].Visible)
                {
                    DataRow drCurrentRow9 = Product_Table9.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail9.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail9.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail9.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail9.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail9.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail9.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow9["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow9["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow9["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow9["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow9["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow9["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow9["txtDescription"] = txtDescription.Text;
                    drCurrentRow9["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow9["txtRate"] = txtRate.Text;
                    drCurrentRow9["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow9["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow9["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table9.Rows.Add(drCurrentRow9);
                }
            }
            DataRow dr = Product_Table9.NewRow();
            dr[0] = "--Select Item--";
            Product_Table9.Rows.Add(dr);
            GV_InvoiceDetail9.DataSource = Product_Table9;
            GV_InvoiceDetail9.DataBind();
            Bind_FishName_Dropdown9();
            Bind_FishGrade_Dropdown9();
            Bind_FishSize_Dropdown9();
            for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail9.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table9.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail9.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table9.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail9.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table9.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear9_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "9";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table9
    {
        get
        {
            DataTable dt9 = (DataTable)ViewState["CurrentTable9"];
            if (dt9 == null)
            {
                dt9.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt9.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt9.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt9.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt9.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt9.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt9.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt9.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt9.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt9.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt9.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt9.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt9.Rows.Add(dt9.NewRow());
                }
            }
            ViewState["CurrentTable9"] = dt9;
            return dt9;
        }
        set
        {
            ViewState["CurrentTable9"] = value;
        }
    }
    public DataTable Product_DataSource9()
    {
        DataTable dtProduct = Product_Table9;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
        {
            if (GV_InvoiceDetail9.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail9.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail9.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail9.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail9.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail9.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail9.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table9.Rows.Count; pr++)
            {
                if (Product_Table9.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table9.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table9.Rows.Count; pr++)
            {
                if (Product_Table9.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table9.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table9.Rows.Count; pr++)
            {
                if (Product_Table9.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table9.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows9()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail9_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV9"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged9(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g9.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g9.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "9";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    protected void ddlFishGrade_SelectedIndexChanged9(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g9.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g9.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g9.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail9.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "9";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown9()
    {
        for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail9.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table9.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId9 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown9()
    {
        for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail9.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail9 = inv_dtl.getInvoiceDetailByInvoiceID9(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail9.Rows.Count > 0)
                {
                    FishId9 = SCGL_Common.Convert_ToInt(dtInvoiceDetail9.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId9);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table9.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId9 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown9()
    {
        for (int i = 0; i < GV_InvoiceDetail9.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail9.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail9 = inv_dtl.getInvoiceDetailByInvoiceID9(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail9.Rows.Count > 0)
                {
                    FishGradeId9 = SCGL_Common.Convert_ToInt(dtInvoiceDetail9.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId9, "@GradId", FishGradeId9);
        }
    }

    int FishId10 = 0;
    int FishGradeId10 = 0;
    protected void GV_InvoiceDetail10_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail10.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail10.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail10.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail10.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail10.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail10.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail10.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail10.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "10";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail10()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail10 = inv_dtl.getInvoiceDetailByInvoiceID10(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail10.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail10.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail10.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail10.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail10.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail10.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail10.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail10.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail10.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail10.Rows[i]["FishSizeID"] != null && dtInvoiceDetail10.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail10.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail10.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail10.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail10.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail10.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail10.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail10.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines10_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow10 = (DropDownList)GV_InvoiceDetail10.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow10 = (DropDownList)GV_InvoiceDetail10.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow10.SelectedValue) > 0 && int.Parse(ddlFishGradeRow10.SelectedValue) > 0)
        {
            AddNewRowToGrid10();
            for (int i = 1; i < GV_InvoiceDetail10.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail10.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail10.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "10";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid10()
    {
        try
        {
            Product_Table10.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
            {
                if (GV_InvoiceDetail10.Rows[i].Visible)
                {
                    DataRow drCurrentRow10 = Product_Table10.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail10.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail10.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail10.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail10.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail10.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail10.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow10["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow10["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow10["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow10["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow10["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow10["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow10["txtDescription"] = txtDescription.Text;
                    drCurrentRow10["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow10["txtRate"] = txtRate.Text;
                    drCurrentRow10["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow10["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow10["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table10.Rows.Add(drCurrentRow10);
                }
            }
            DataRow dr = Product_Table10.NewRow();
            dr[0] = "--Select Item--";
            Product_Table10.Rows.Add(dr);
            GV_InvoiceDetail10.DataSource = Product_Table10;
            GV_InvoiceDetail10.DataBind();
            Bind_FishName_Dropdown10();
            Bind_FishGrade_Dropdown10();
            Bind_FishSize_Dropdown10();
            for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail10.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table10.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail10.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table10.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail10.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table10.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear10_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "10";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table10
    {
        get
        {
            DataTable dt10 = (DataTable)ViewState["CurrentTable10"];
            if (dt10 == null)
            {
                dt10.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt10.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt10.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt10.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt10.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt10.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt10.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt10.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt10.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt10.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt10.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt10.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt10.Rows.Add(dt10.NewRow());
                }
            }
            ViewState["CurrentTable10"] = dt10;
            return dt10;
        }
        set
        {
            ViewState["CurrentTable10"] = value;
        }
    }
    public DataTable Product_DataSource10()
    {
        DataTable dtProduct = Product_Table10;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
        {
            if (GV_InvoiceDetail10.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail10.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail10.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail10.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail10.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail10.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail10.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table10.Rows.Count; pr++)
            {
                if (Product_Table10.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table10.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table10.Rows.Count; pr++)
            {
                if (Product_Table10.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table10.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table10.Rows.Count; pr++)
            {
                if (Product_Table10.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table10.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows10()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail10_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV10"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged10(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g10.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g10.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "10";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    protected void ddlFishGrade_SelectedIndexChanged10(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g10.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g10.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g10.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail10.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "10";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown10()
    {
        for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail10.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table10.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId10 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown10()
    {
        for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail10.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail10 = inv_dtl.getInvoiceDetailByInvoiceID10(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail10.Rows.Count > 0)
                {
                    FishId10 = SCGL_Common.Convert_ToInt(dtInvoiceDetail10.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId10);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table10.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId10 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown10()
    {
        for (int i = 0; i < GV_InvoiceDetail10.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail10.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail10 = inv_dtl.getInvoiceDetailByInvoiceID10(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail10.Rows.Count > 0)
                {
                    FishGradeId10 = SCGL_Common.Convert_ToInt(dtInvoiceDetail10.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId10, "@GradId", FishGradeId10);
        }
    }

    int FishId11 = 0;
    int FishGradeId11 = 0;
    protected void GV_InvoiceDetail11_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail11.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail11.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail11.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail11.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail11.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail11.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail11.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail11.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "11";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail11()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail11 = inv_dtl.getInvoiceDetailByInvoiceID11(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail11.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail11.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail11.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail11.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail11.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail11.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail11.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail11.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail11.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail11.Rows[i]["FishSizeID"] != null && dtInvoiceDetail11.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail11.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail11.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail11.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail11.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail11.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail11.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail11.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines11_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow11 = (DropDownList)GV_InvoiceDetail11.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow11 = (DropDownList)GV_InvoiceDetail11.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow11.SelectedValue) > 0 && int.Parse(ddlFishGradeRow11.SelectedValue) > 0)
        {
            AddNewRowToGrid11();
            for (int i = 1; i < GV_InvoiceDetail11.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail11.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail11.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "11";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid11()
    {
        try
        {
            Product_Table11.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
            {
                if (GV_InvoiceDetail11.Rows[i].Visible)
                {
                    DataRow drCurrentRow11 = Product_Table11.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail11.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail11.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail11.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail11.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail11.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail11.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow11["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow11["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow11["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow11["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow11["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow11["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow11["txtDescription"] = txtDescription.Text;
                    drCurrentRow11["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow11["txtRate"] = txtRate.Text;
                    drCurrentRow11["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow11["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow11["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table11.Rows.Add(drCurrentRow11);
                }
            }
            DataRow dr = Product_Table11.NewRow();
            dr[0] = "--Select Item--";
            Product_Table11.Rows.Add(dr);
            GV_InvoiceDetail11.DataSource = Product_Table11;
            GV_InvoiceDetail11.DataBind();
            Bind_FishName_Dropdown11();
            Bind_FishGrade_Dropdown11();
            Bind_FishSize_Dropdown11();
            for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail11.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table11.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail11.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table11.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail11.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table11.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear11_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "6";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table11
    {
        get
        {
            DataTable dt11 = (DataTable)ViewState["CurrentTable11"];
            if (dt11 == null)
            {
                dt11.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt11.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt11.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt11.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt11.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt11.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt11.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt11.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt11.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt11.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt11.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt11.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt11.Rows.Add(dt11.NewRow());
                }
            }
            ViewState["CurrentTable11"] = dt11;
            return dt11;
        }
        set
        {
            ViewState["CurrentTable11"] = value;
        }
    }
    public DataTable Product_DataSource11()
    {
        DataTable dtProduct = Product_Table11;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
        {
            if (GV_InvoiceDetail11.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail11.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail11.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail11.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail11.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail11.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail11.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table11.Rows.Count; pr++)
            {
                if (Product_Table11.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table11.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table11.Rows.Count; pr++)
            {
                if (Product_Table11.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table11.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table11.Rows.Count; pr++)
            {
                if (Product_Table11.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table11.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows11()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail11_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV11"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged11(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g11.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g11.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "11";
        SCGL_Common.ReloadJS(this, "setTabHref();");

    }
    protected void ddlFishGrade_SelectedIndexChanged11(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g11.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g11.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g11.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail11.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "11";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown11()
    {
        for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail11.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table11.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId11 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown11()
    {
        for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail11.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail11 = inv_dtl.getInvoiceDetailByInvoiceID11(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail11.Rows.Count > 0)
                {
                    FishId11 = SCGL_Common.Convert_ToInt(dtInvoiceDetail11.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId11);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table11.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId11 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown11()
    {
        for (int i = 0; i < GV_InvoiceDetail11.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail11.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail11 = inv_dtl.getInvoiceDetailByInvoiceID11(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail11.Rows.Count > 0)
                {
                    FishGradeId11 = SCGL_Common.Convert_ToInt(dtInvoiceDetail11.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId11, "@GradId", FishGradeId11);
        }
    }

    int FishId12 = 0;
    int FishGradeId12 = 0;
    protected void GV_InvoiceDetail12_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail12.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail12.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail12.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail12.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail12.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail12.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail12.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail12.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "12";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail12()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail12 = inv_dtl.getInvoiceDetailByInvoiceID12(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail12.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail12.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail12.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail12.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail12.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail12.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail12.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail12.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail12.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail12.Rows[i]["FishSizeID"] != null && dtInvoiceDetail12.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail12.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail12.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail12.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail12.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail12.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail12.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail12.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines12_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow12 = (DropDownList)GV_InvoiceDetail12.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow12 = (DropDownList)GV_InvoiceDetail12.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow12.SelectedValue) > 0 && int.Parse(ddlFishGradeRow12.SelectedValue) > 0)
        {
            AddNewRowToGrid12();
            for (int i = 1; i < GV_InvoiceDetail12.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail12.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail12.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "12";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid12()
    {
        try
        {
            Product_Table12.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
            {
                if (GV_InvoiceDetail12.Rows[i].Visible)
                {
                    DataRow drCurrentRow12 = Product_Table12.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail12.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail12.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail12.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail12.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail12.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail12.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow12["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow12["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow12["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow12["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow12["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow12["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow12["txtDescription"] = txtDescription.Text;
                    drCurrentRow12["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow12["txtRate"] = txtRate.Text;
                    drCurrentRow12["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow12["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow12["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table12.Rows.Add(drCurrentRow12);
                }
            }
            DataRow dr = Product_Table12.NewRow();
            dr[0] = "--Select Item--";
            Product_Table12.Rows.Add(dr);
            GV_InvoiceDetail12.DataSource = Product_Table12;
            GV_InvoiceDetail12.DataBind();
            Bind_FishName_Dropdown12();
            Bind_FishGrade_Dropdown12();
            Bind_FishSize_Dropdown12();
            for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail12.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table12.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail12.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table12.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail12.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table12.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear12_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "12";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table12
    {
        get
        {
            DataTable dt12 = (DataTable)ViewState["CurrentTable12"];
            if (dt12 == null)
            {
                dt12.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt12.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt12.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt12.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt12.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt12.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt12.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt12.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt12.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt12.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt12.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt12.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt12.Rows.Add(dt12.NewRow());
                }
            }
            ViewState["CurrentTable12"] = dt12;
            return dt12;
        }
        set
        {
            ViewState["CurrentTable12"] = value;
        }
    }
    public DataTable Product_DataSource12()
    {
        DataTable dtProduct = Product_Table12;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
        {
            if (GV_InvoiceDetail12.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail12.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail12.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail12.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail12.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail12.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail12.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table12.Rows.Count; pr++)
            {
                if (Product_Table12.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table12.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table12.Rows.Count; pr++)
            {
                if (Product_Table12.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table12.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table12.Rows.Count; pr++)
            {
                if (Product_Table12.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table12.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows12()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail12_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV12"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged12(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g12.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g12.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "12";
        SCGL_Common.ReloadJS(this, "setTabHref();");

    }
    protected void ddlFishGrade_SelectedIndexChanged12(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g12.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g12.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g12.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail12.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "12";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown12()
    {
        for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail12.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table12.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId12 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown12()
    {
        for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail12.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail12 = inv_dtl.getInvoiceDetailByInvoiceID12(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail12.Rows.Count > 0)
                {
                    FishId12 = SCGL_Common.Convert_ToInt(dtInvoiceDetail12.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId12);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table12.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId12 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown12()
    {
        for (int i = 0; i < GV_InvoiceDetail12.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail12.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail12 = inv_dtl.getInvoiceDetailByInvoiceID12(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail12.Rows.Count > 0)
                {
                    FishGradeId12 = SCGL_Common.Convert_ToInt(dtInvoiceDetail12.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId12, "@GradId", FishGradeId12);
        }
    }


    int FishId13 = 0;
    int FishGradeId13 = 0;
    protected void GV_InvoiceDetail13_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail13.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail13.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail13.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail13.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail13.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail13.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail13.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail13.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "13";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail13()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail13 = inv_dtl.getInvoiceDetailByInvoiceID13(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail13.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail13.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail13.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail13.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail13.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail13.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail13.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail13.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail13.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail13.Rows[i]["FishSizeID"] != null && dtInvoiceDetail13.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail13.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail13.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail13.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail13.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail13.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail13.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail13.Rows[i]["amount"].ToString();
                }
            }
        }

        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines13_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow13 = (DropDownList)GV_InvoiceDetail13.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow13 = (DropDownList)GV_InvoiceDetail13.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow13.SelectedValue) > 0 && int.Parse(ddlFishGradeRow13.SelectedValue) > 0)
        {
            AddNewRowToGrid13();
            for (int i = 1; i < GV_InvoiceDetail13.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail13.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail13.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "13";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid13()
    {
        try
        {
            Product_Table13.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
            {
                if (GV_InvoiceDetail13.Rows[i].Visible)
                {
                    DataRow drCurrentRow13 = Product_Table13.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail13.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail13.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail13.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail13.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail13.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail13.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow13["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow13["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow13["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow13["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow13["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow13["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow13["txtDescription"] = txtDescription.Text;
                    drCurrentRow13["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow13["txtRate"] = txtRate.Text;
                    drCurrentRow13["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow13["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow13["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table13.Rows.Add(drCurrentRow13);
                }
            }
            DataRow dr = Product_Table13.NewRow();
            dr[0] = "--Select Item--";
            Product_Table13.Rows.Add(dr);
            GV_InvoiceDetail13.DataSource = Product_Table13;
            GV_InvoiceDetail13.DataBind();
            Bind_FishName_Dropdown13();
            Bind_FishGrade_Dropdown13();
            Bind_FishSize_Dropdown13();
            for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail13.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table13.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail13.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table13.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail13.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table13.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear13_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "13";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table13
    {
        get
        {
            DataTable dt13 = (DataTable)ViewState["CurrentTable13"];
            if (dt13 == null)
            {
                dt13.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt13.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt13.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt13.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt13.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt13.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt13.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt13.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt13.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt13.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt13.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt13.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt13.Rows.Add(dt13.NewRow());
                }
            }
            ViewState["CurrentTable13"] = dt13;
            return dt13;
        }
        set
        {
            ViewState["CurrentTable13"] = value;
        }
    }
    public DataTable Product_DataSource13()
    {
        DataTable dtProduct = Product_Table13;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
        {
            if (GV_InvoiceDetail13.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail13.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail13.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail13.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail13.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail13.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail13.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table13.Rows.Count; pr++)
            {
                if (Product_Table13.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table13.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table13.Rows.Count; pr++)
            {
                if (Product_Table13.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table13.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table13.Rows.Count; pr++)
            {
                if (Product_Table13.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table13.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows13()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail13_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV13"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged13(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g13.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g13.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "13";
        SCGL_Common.ReloadJS(this, "setTabHref();");

    }
    protected void ddlFishGrade_SelectedIndexChanged13(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g13.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g13.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g13.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail13.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "13";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown13()
    {
        for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail13.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table13.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId13 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown13()
    {
        for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail13.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail13 = inv_dtl.getInvoiceDetailByInvoiceID13(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail13.Rows.Count > 0)
                {
                    FishId13 = SCGL_Common.Convert_ToInt(dtInvoiceDetail13.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId13);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table13.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId13 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown13()
    {
        for (int i = 0; i < GV_InvoiceDetail13.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail13.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail13 = inv_dtl.getInvoiceDetailByInvoiceID13(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail13.Rows.Count > 0)
                {
                    FishGradeId13 = SCGL_Common.Convert_ToInt(dtInvoiceDetail13.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId13, "@GradId", FishGradeId13);
        }
    }

    int FishId14 = 0;
    int FishGradeId14 = 0;
    protected void GV_InvoiceDetail14_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail14.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail14.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail14.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail14.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail14.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail14.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail14.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail14.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "14";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail14()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail14 = inv_dtl.getInvoiceDetailByInvoiceID14(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail14.Rows.Count; i++)
            {

                DropDownList ddlFish = GV_InvoiceDetail14.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail14.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail14.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail14.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail14.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail14.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail14.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail14.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail14.Rows[i]["FishSizeID"] != null && dtInvoiceDetail14.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail14.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail14.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail14.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail14.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail14.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail14.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail14.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines14_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow14 = (DropDownList)GV_InvoiceDetail14.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow14 = (DropDownList)GV_InvoiceDetail14.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow14.SelectedValue) > 0 && int.Parse(ddlFishGradeRow14.SelectedValue) > 0)
        {
            AddNewRowToGrid14();
            for (int i = 1; i < GV_InvoiceDetail14.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail14.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail14.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "14";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid14()
    {
        try
        {
            Product_Table14.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
            {
                if (GV_InvoiceDetail14.Rows[i].Visible)
                {
                    DataRow drCurrentRow14 = Product_Table14.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail14.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail14.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail14.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail14.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail14.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail14.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow14["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow14["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow14["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow14["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow14["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow14["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow14["txtDescription"] = txtDescription.Text;
                    drCurrentRow14["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow14["txtRate"] = txtRate.Text;
                    drCurrentRow14["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow14["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow14["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table14.Rows.Add(drCurrentRow14);
                }
            }
            DataRow dr = Product_Table14.NewRow();
            dr[0] = "--Select Item--";
            Product_Table14.Rows.Add(dr);
            GV_InvoiceDetail14.DataSource = Product_Table14;
            GV_InvoiceDetail14.DataBind();
            Bind_FishName_Dropdown14();
            Bind_FishGrade_Dropdown14();
            Bind_FishSize_Dropdown14();
            for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail14.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table14.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail14.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table14.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail14.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table14.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear14_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "14";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table14
    {
        get
        {
            DataTable dt14 = (DataTable)ViewState["CurrentTable14"];
            if (dt14 == null)
            {
                dt14.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt14.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt14.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt14.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt14.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt14.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt14.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt14.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt14.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt14.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt14.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt14.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 10; i++)
                {
                    dt14.Rows.Add(dt14.NewRow());
                }
            }
            ViewState["CurrentTable14"] = dt14;
            return dt14;
        }
        set
        {
            ViewState["CurrentTable14"] = value;
        }
    }
    public DataTable Product_DataSource14()
    {
        DataTable dtProduct = Product_Table14;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
        {
            if (GV_InvoiceDetail14.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail14.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail14.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail14.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail14.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail14.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail14.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table14.Rows.Count; pr++)
            {
                if (Product_Table14.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table14.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table14.Rows.Count; pr++)
            {
                if (Product_Table14.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table14.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table14.Rows.Count; pr++)
            {
                if (Product_Table14.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table14.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows14()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail14_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV14"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged14(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g14.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g14.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "14";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    protected void ddlFishGrade_SelectedIndexChanged14(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g14.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g14.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g14.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail14.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "14";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown14()
    {
        for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail14.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table14.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId14 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown14()
    {
        for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail14.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail14 = inv_dtl.getInvoiceDetailByInvoiceID14(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail14.Rows.Count > 0)
                {
                    FishId14 = SCGL_Common.Convert_ToInt(dtInvoiceDetail14.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId14);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table14.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId14 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown14()
    {
        for (int i = 0; i < GV_InvoiceDetail14.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail14.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail14 = inv_dtl.getInvoiceDetailByInvoiceID14(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail14.Rows.Count > 0)
                {
                    FishGradeId14 = SCGL_Common.Convert_ToInt(dtInvoiceDetail14.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId14, "@GradId", FishGradeId14);
        }
    }

    int FishId15 = 0;
    int FishGradeId15 = 0;
    protected void GV_InvoiceDetail15_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        int index = e.RowIndex;
        if (index != 0)
        {
            GV_InvoiceDetail15.Rows[e.RowIndex].Visible = false;
            DropDownList ddlFishName = (DropDownList)GV_InvoiceDetail15.Rows[e.RowIndex].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail15.Rows[e.RowIndex].Cells[2].FindControl("ddlFishGrade");
            TextBox txtDescription = (TextBox)GV_InvoiceDetail15.Rows[e.RowIndex].Cells[3].FindControl("txtDescription");
            TextBox txtQuantity = (TextBox)GV_InvoiceDetail15.Rows[e.RowIndex].Cells[4].FindControl("txtQuantity");
            TextBox txtRate = (TextBox)GV_InvoiceDetail15.Rows[e.RowIndex].Cells[5].FindControl("txtRate");
            HtmlInputText txtAmount = GV_InvoiceDetail15.Rows[e.RowIndex].Cells[6].FindControl("txtAmount") as HtmlInputText;
            Label lblInventory = (Label)GV_InvoiceDetail15.Rows[e.RowIndex].Cells[7].FindControl("lblInventoryId");
            if (txtAmount.Value == "")
            {
                txtAmount.Value = "0";
            }
            ddlFishName.SelectedIndex = 0;
            txtDescription.Text = "";
            txtQuantity.Text = "";
            txtRate.Text = "";
            txtAmount.Value = "";
            lblInventory.Text = "";
        }
        hfSelectedTAB.Value = "15";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void FillGridInvoiceDetail15()
    {
        try
        {
            InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
            DataTable dtInvoiceDetail15 = inv_dtl.getInvoiceDetailByInvoiceID15(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
            for (int i = 0; i < dtInvoiceDetail15.Rows.Count; i++)
            {
                DropDownList ddlFish = GV_InvoiceDetail15.Rows[i].FindControl("ddlFish") as DropDownList;
                DropDownList ddlFishGrade = GV_InvoiceDetail15.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                DropDownList ddlFishSize = GV_InvoiceDetail15.Rows[i].FindControl("ddlFishSize") as DropDownList;
                TextBox txtDescription = GV_InvoiceDetail15.Rows[i].FindControl("txtDescription") as TextBox;
                TextBox txtQuantity = GV_InvoiceDetail15.Rows[i].FindControl("txtQuantity") as TextBox;
                TextBox txtRate = GV_InvoiceDetail15.Rows[i].FindControl("txtRate") as TextBox;
                HtmlInputText txtTotalPrice = GV_InvoiceDetail15.Rows[i].FindControl("txtAmount") as HtmlInputText;
                Label lblInventoryId = GV_InvoiceDetail15.Rows[i].FindControl("lblInventoryId") as Label;
                if (dtInvoiceDetail15.Rows[i]["FishSizeID"] != null && dtInvoiceDetail15.Rows[i]["FishSizeID"].ToString() != "")
                {
                    ddlFish.SelectedValue = dtInvoiceDetail15.Rows[i]["FishID"].ToString();
                    ddlFishGrade.SelectedValue = dtInvoiceDetail15.Rows[i]["FishGradeID"].ToString();
                    ddlFishSize.SelectedValue = dtInvoiceDetail15.Rows[i]["FishSizeID"].ToString();
                    txtDescription.Text = dtInvoiceDetail15.Rows[i]["Description"].ToString();
                    txtQuantity.Text = dtInvoiceDetail15.Rows[i]["Quantity"].ToString();
                    txtRate.Text = dtInvoiceDetail15.Rows[i]["Rate"].ToString();
                    txtTotalPrice.Value = dtInvoiceDetail15.Rows[i]["amount"].ToString();
                }
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    protected void btnaddlines15_Click(object sender, EventArgs e)
    {
        DropDownList ddlFishRow15 = (DropDownList)GV_InvoiceDetail15.Rows[0].Cells[1].FindControl("ddlFish");
        DropDownList ddlFishGradeRow15 = (DropDownList)GV_InvoiceDetail15.Rows[0].Cells[2].FindControl("ddlFishGrade");
        if (int.Parse(ddlFishRow15.SelectedValue) > 0 && int.Parse(ddlFishGradeRow15.SelectedValue) > 0)
        {
            AddNewRowToGrid15();
            for (int i = 1; i < GV_InvoiceDetail15.Rows.Count; i++)
            {
                DropDownList ddlFishRow1 = (DropDownList)GV_InvoiceDetail15.Rows[0].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGradeRow1 = (DropDownList)GV_InvoiceDetail15.Rows[0].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[2].FindControl("ddlFishGrade");
                ddlFish.SelectedValue = ddlFishRow1.SelectedValue;
                ddlFish.Enabled = false;
                ddlFishGrade.SelectedValue = ddlFishGradeRow1.SelectedValue;
                ddlFishGrade.Enabled = false;
            }
        }
        hfSelectedTAB.Value = "15";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void AddNewRowToGrid15()
    {
        try
        {
            Product_Table15.Rows.Clear();
            for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
            {
                if (GV_InvoiceDetail15.Rows[i].Visible)
                {
                    DataRow drCurrentRow15 = Product_Table15.NewRow();
                    DropDownList ddlFish = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[1].FindControl("ddlFish");
                    DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[2].FindControl("ddlFishGrade");
                    DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[3].FindControl("ddlFishSize");
                    TextBox txtDescription = (TextBox)GV_InvoiceDetail15.Rows[i].Cells[4].FindControl("txtDescription");
                    TextBox txtQuantity = (TextBox)GV_InvoiceDetail15.Rows[i].Cells[5].FindControl("txtQuantity");
                    TextBox txtRate = (TextBox)GV_InvoiceDetail15.Rows[i].Cells[6].FindControl("txtRate");
                    HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail15.Rows[i].Cells[7].FindControl("txtAmount");
                    Label txtGrid = (Label)GV_InvoiceDetail15.Rows[i].Cells[8].FindControl("txtGridName");
                    Label InventoryId = (Label)GV_InvoiceDetail15.Rows[i].Cells[9].FindControl("lblInventoryId");
                    drCurrentRow15["Fish_Item"] = ddlFish.SelectedItem.Text;
                    drCurrentRow15["Fish_value"] = ddlFish.SelectedValue;
                    drCurrentRow15["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    drCurrentRow15["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    drCurrentRow15["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    drCurrentRow15["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    drCurrentRow15["txtDescription"] = txtDescription.Text;
                    drCurrentRow15["txtQuantity"] = txtQuantity.Text;
                    drCurrentRow15["txtRate"] = txtRate.Text;
                    drCurrentRow15["txtAmount"] = txtTotalPrice.Value;
                    drCurrentRow15["txtGridName"] = txtGrid.Text;
                    if (int.Parse(ddlFish.SelectedValue) > 0 && int.Parse(ddlFishGrade.SelectedValue) > 0 && int.Parse(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        drCurrentRow15["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                    Product_Table15.Rows.Add(drCurrentRow15);
                }
            }
            DataRow dr = Product_Table15.NewRow();
            dr[0] = "--Select Item--";
            Product_Table15.Rows.Add(dr);
            GV_InvoiceDetail15.DataSource = Product_Table15;
            GV_InvoiceDetail15.DataBind();
            Bind_FishName_Dropdown15();
            Bind_FishGrade_Dropdown15();
            Bind_FishSize_Dropdown15();
            for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail15.Rows[i].FindControl("ddlFish") as DropDownList;
                if (i > 0)
                {
                    cbox.Visible = false;
                }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table15.Rows[i]["Fish_Item"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail15.Rows[i].FindControl("ddlFishGrade") as DropDownList;
                if (i > 0) { cbox.Visible = false; }
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table15.Rows[i]["Fish_Grade"].ToString()));
            }
            for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
            {
                DropDownList cbox = GV_InvoiceDetail15.Rows[i].FindControl("ddlFishSize") as DropDownList;
                cbox.SelectedIndex = cbox.Items.IndexOf(cbox.Items.FindByText(Product_Table15.Rows[i]["Fish_Size"].ToString()));
            }
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }
    //protected void btnClear15_Click(object sender, EventArgs e)
    //{
    //    SetInitialRow();
    //    hfSelectedTAB.Value = "15";
    //    SCGL_Common.ReloadJS(this, "setTabHref();");
    //}
    private DataTable Product_Table15
    {
        get
        {
            DataTable dt15 = (DataTable)ViewState["CurrentTable15"];
            if (dt15 == null)
            {
                dt15.Columns.Add(new DataColumn("RowNumber", typeof(string)));
                dt15.Columns.Add(new DataColumn("Fish_Item", typeof(string)));
                dt15.Columns.Add(new DataColumn("Fish_Grade", typeof(string)));
                dt15.Columns.Add(new DataColumn("Fish_Size", typeof(string)));
                dt15.Columns.Add(new DataColumn("txtDescription", typeof(string)));
                dt15.Columns.Add(new DataColumn("txtQuantity", typeof(string)));
                dt15.Columns.Add(new DataColumn("txtRate", typeof(string)));
                dt15.Columns.Add(new DataColumn("txtAmount", typeof(string)));
                dt15.Columns.Add(new DataColumn("lblInventoryId", typeof(string)));
                dt15.Columns.Add(new DataColumn("Fish_Value", typeof(string)));
                dt15.Columns.Add(new DataColumn("Fish_GradeValue", typeof(string)));
                dt15.Columns.Add(new DataColumn("Fish_SizeValue", typeof(string)));
                for (int i = 0; i < 15; i++)
                {
                    dt15.Rows.Add(dt15.NewRow());
                }
            }
            ViewState["CurrentTable15"] = dt15;
            return dt15;
        }
        set
        {
            ViewState["CurrentTable15"] = value;
        }
    }
    public DataTable Product_DataSource15()
    {
        DataTable dtProduct = Product_Table15;
        dtProduct.Rows.Clear();
        for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
        {
            if (GV_InvoiceDetail15.Rows[i].Visible)
            {
                DropDownList ddlFish = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[1].FindControl("ddlFish");
                DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[2].FindControl("ddlFishGrade");
                DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[3].FindControl("ddlFishSize");
                TextBox txtDescription = (TextBox)GV_InvoiceDetail15.Rows[i].Cells[4].FindControl("txtDescription");
                TextBox txtQuantity = (TextBox)GV_InvoiceDetail15.Rows[i].Cells[5].FindControl("txtQuantity");
                TextBox txtRate = (TextBox)GV_InvoiceDetail15.Rows[i].Cells[6].FindControl("txtRate");
                HtmlInputText txtTotalPrice = (HtmlInputText)GV_InvoiceDetail15.Rows[i].Cells[7].FindControl("txtAmount");
                Label txtGrid = (Label)GV_InvoiceDetail15.Rows[i].Cells[8].FindControl("txtGridName");
                Label lblInventory = (Label)GV_InvoiceDetail15.Rows[i].Cells[9].FindControl("lblInventoryId");
                dtProduct.Rows.Add(dtProduct.NewRow());
                if (ddlFish.SelectedValue.ToString() != "0")
                {
                    dtProduct.Rows[i]["Fish_Item"] = ddlFish.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_value"] = ddlFish.SelectedValue;
                    dtProduct.Rows[i]["Fish_Grade"] = ddlFishGrade.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Gradevalue"] = ddlFishGrade.SelectedValue;
                    dtProduct.Rows[i]["Fish_Size"] = ddlFishSize.SelectedItem.Text;
                    dtProduct.Rows[i]["Fish_Sizevalue"] = ddlFishSize.SelectedValue;
                    dtProduct.Rows[i]["txtDescription"] = txtDescription.Text;
                    dtProduct.Rows[i]["txtQuantity"] = txtQuantity.Text;
                    dtProduct.Rows[i]["txtRate"] = txtRate.Text;
                    dtProduct.Rows[i]["txtAmount"] = txtTotalPrice.Value;
                    dtProduct.Rows[i]["txtGridName"] = txtGrid.Text;
                    if (SCGL_Common.Convert_ToInt(ddlFish.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishGrade.SelectedValue) > 0 && SCGL_Common.Convert_ToInt(ddlFishSize.SelectedValue) > 0)
                    {
                        DataTable dtRetInventory = BALInvoice.getInvntoryByID(int.Parse(ddlFish.SelectedValue), int.Parse(ddlFishGrade.SelectedValue), int.Parse(ddlFishSize.SelectedValue));
                        dtProduct.Rows[i]["lblInventoryId"] = dtRetInventory.Rows[0]["Inventory_Id"].ToString();
                    }
                }
            }
            else
            {
                dtProduct.Rows.Add(dtProduct.NewRow());
            }
        }
        if (dtProduct.Rows.Count > 0)
        {
            for (int pr = 0; pr < Product_Table15.Rows.Count; pr++)
            {
                if (Product_Table15.Rows[pr]["Fish_Value"].ToString() == "")
                {
                    Product_Table15.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table15.Rows.Count; pr++)
            {
                if (Product_Table15.Rows[pr]["Fish_GradeValue"].ToString() == "")
                {
                    Product_Table15.Rows.RemoveAt(pr);
                    pr--;
                }
            }
            for (int pr = 0; pr < Product_Table15.Rows.Count; pr++)
            {
                if (Product_Table15.Rows[pr]["Fish_SizeValue"].ToString() == "")
                {
                    Product_Table15.Rows.RemoveAt(pr);
                    pr--;
                }
            }
        }
        return dtProduct;

    }
    public void Gv_GetRows15()
    {
        SqlDataReader dr = BALInvoice.Get_Rows_InvoiceDetail15_byID(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
        while (dr.Read())
        {
            Session["GV15"] = dr["RowNumber"].ToString();
        }
    }
    protected void ddlFish_SelectedIndexChanged15(object sender, EventArgs e)
    {
        int ddlFishId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishGrade") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFishId);
        hf1g15.Value = SCGL_Common.Convert_ToString(ddlFishId);
        for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[1].FindControl("ddlFish");
            DropDownList ddlFishGrade = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf1g15.Value;
            SCGL_Common.Bind_DropDown(ddlFishGrade, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", ddlFish1.SelectedValue);
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", 0, "@GradId", 0);
        }
        hfSelectedTAB.Value = "15";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    protected void ddlFishGrade_SelectedIndexChanged15(object sender, EventArgs e)
    {
        int ddlGradeId = int.Parse(((System.Web.UI.WebControls.DropDownList)(sender)).SelectedValue);
        int fieldFishId = SCGL_Common.Convert_ToInt(hf1g15.Value);
        DropDownList ddlFish = (((sender as DropDownList).NamingContainer) as GridViewRow).FindControl("ddlFishSize") as DropDownList;
        SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        hf2g15.Value = SCGL_Common.Convert_ToString(ddlGradeId);
        for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
        {
            DropDownList ddlFish1 = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[1].FindControl("ddlFishGrade");
            ddlFish1.SelectedValue = hf2g15.Value;
            DropDownList ddlFishSize = (DropDownList)GV_InvoiceDetail15.Rows[i].Cells[1].FindControl("ddlFishSize");
            SCGL_Common.Bind_DropDown(ddlFishSize, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", fieldFishId, "@GradId", ddlGradeId);
        }
        hfSelectedTAB.Value = "15";
        SCGL_Common.ReloadJS(this, "setTabHref();");
    }
    public void Bind_FishName_Dropdown15()
    {
        for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail15.Rows[i].FindControl("ddlFish") as DropDownList;
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishName", "FishName", "FishID");
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table15.Rows[i]["Fish_Value"]);
            if (i == 0)
            {
                FishId15 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishGrade_Dropdown15()
    {
        for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail15.Rows[i].FindControl("ddlFishGrade") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail15 = inv_dtl.getInvoiceDetailByInvoiceID15(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail15.Rows.Count > 0)
                {
                    FishId15 = SCGL_Common.Convert_ToInt(dtInvoiceDetail15.Rows[0]["FishID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishGrade", "FishGrade", "FishGradeID", "@FishID", FishId15);
            ddlFish.SelectedValue = SCGL_Common.Convert_ToString(Product_Table15.Rows[i]["Fish_gradeValue"]);
            if (i == 0)
            {
                FishGradeId15 = int.Parse(ddlFish.SelectedValue);
            }
        }
    }
    public void Bind_FishSize_Dropdown15()
    {
        for (int i = 0; i < GV_InvoiceDetail15.Rows.Count; i++)
        {
            DropDownList ddlFish = GV_InvoiceDetail15.Rows[i].FindControl("ddlFishSize") as DropDownList;
            if (Request.QueryString["ID"] != null)
            {
                InvoiceDetail_BAL inv_dtl = new InvoiceDetail_BAL();
                DataTable dtInvoiceDetail15 = inv_dtl.getInvoiceDetailByInvoiceID15(SCGL_Common.Convert_ToInt(Request.QueryString["ID"]));
                if (dtInvoiceDetail15.Rows.Count > 0)
                {
                    FishGradeId15 = SCGL_Common.Convert_ToInt(dtInvoiceDetail15.Rows[0]["FishGradeID"].ToString());
                }
            }
            SCGL_Common.Bind_DropDown(ddlFish, "vt_SCGL_Sp_GetFishSize", "FishSize", "FishSizeID", "@FishID", FishId15, "@GradId", FishGradeId15);
        }
    }
}
